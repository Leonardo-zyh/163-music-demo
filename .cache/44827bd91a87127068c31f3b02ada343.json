{"id":"..\\node_modules\\leancloud-storage\\docs\\user.js.html","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\package.json","includedInParent":true,"mtime":1537089220121},{"name":"./scripts\\prettify\\prettify.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\prettify\\prettify.js"},{"name":"./scripts\\prettify\\lang-css.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\prettify\\lang-css.js"},{"name":"./styles\\prettify.css","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\styles\\prettify.css"},{"name":"./styles\\jsdoc.css","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\styles\\jsdoc.css"},{"name":"./index.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\index.html"},{"name":"./AV.ACL.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.ACL.html"},{"name":"./AV.Captcha.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Captcha.html"},{"name":"./AV.Conversation.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Conversation.html"},{"name":"./AV.Error.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Error.html"},{"name":"./AV.File.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.File.html"},{"name":"./AV.GeoPoint.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.GeoPoint.html"},{"name":"./AV.InboxQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.InboxQuery.html"},{"name":"./AV.Insight.JobQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Insight.JobQuery.html"},{"name":"./AV.Leaderboard.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Leaderboard.html"},{"name":"./AV.LiveQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.LiveQuery.html"},{"name":"./AV.Object.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Object.html"},{"name":"./AV.Query.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Query.html"},{"name":"./AV.Relation.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Relation.html"},{"name":"./AV.Role.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Role.html"},{"name":"./AV.SearchQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.SearchQuery.html"},{"name":"./AV.SearchSortBuilder.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.SearchSortBuilder.html"},{"name":"./AV.Status.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Status.html"},{"name":"./AV.User.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.User.html"},{"name":"./Statistic.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\Statistic.html"},{"name":"./AV.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.html"},{"name":"./AV.Cloud.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Cloud.html"},{"name":"./AV.Insight.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Insight.html"},{"name":"./AV.Push.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Push.html"},{"name":"./global.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\global.html"},{"name":"./scripts\\linenumber.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\user.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\linenumber.js"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>user.js - Documentation</title>\n\n    <script src=\"/4cfc1f2b572ef03db14a51b1e6bd2800.js\"></script>\n    <script src=\"/1b5ae35eb04607b99b9b265d2e97413c.js\"></script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/6e9f51ec602f7fc4f941e7344ae64e5b.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/274e9308aef3834be4d3813aa869153b.css\">\n</head>\n<body>\n\n<input type=\"checkbox\" id=\"nav-trigger\" class=\"nav-trigger\">\n<label for=\"nav-trigger\" class=\"navicon-button x\">\n  <div class=\"navicon\"></div>\n</label>\n\n<label for=\"nav-trigger\" class=\"overlay\"></label>\n\n<nav>\n    <h2><a href=\"/32f1a74c1c5fe360a3d78eb929ec49c7.html\">leancloud-storage</a> <span class=\"package-version\">v3.8.1</span></h2><h3>Classes</h3><ul><li><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html\">ACL</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getPublicReadAccess\">getPublicReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getPublicWriteAccess\">getPublicWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getReadAccess\">getReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getRoleReadAccess\">getRoleReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getRoleWriteAccess\">getRoleWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getWriteAccess\">getWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setPublicReadAccess\">setPublicReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setPublicWriteAccess\">setPublicWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setReadAccess\">setReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setRoleReadAccess\">setRoleReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setRoleWriteAccess\">setRoleWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setWriteAccess\">setWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/cd178600daedfca783ae982925dd20db.html\">Captcha</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#.request\">request</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#bind\">bind</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#refresh\">refresh</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#unbind\">unbind</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#verify\">verify</a></li></ul></li><li><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html\">Conversation</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#addMember\">addMember</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#broadcast\">broadcast</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getCreator\">getCreator</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getLastMessageAt\">getLastMessageAt</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getMembers\">getMembers</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getMutedMembers\">getMutedMembers</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getName\">getName</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#isSystem\">isSystem</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#isTransient\">isTransient</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#send\">send</a></li></ul></li><li><a href=\"/6c6da53e6eb3790c9be4c8a9160ecbc0.html\">Error</a></li><li><a href=\"/07b374d13e164aca86af288d7550c522.html\">File</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#.withURL\">withURL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#get\">get</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#getACL\">getACL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#metaData\">metaData</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#name\">name</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#ownerId\">ownerId</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#save\">save</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#set\">set</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#setACL\">setACL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#setUploadHeader\">setUploadHeader</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#size\">size</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#thumbnailURL\">thumbnailURL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#toFullJSON\">toFullJSON</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#url\">url</a></li></ul></li><li><a href=\"/507f70cb2b141178f91c9a95599846ce.html\">GeoPoint</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#.current\">current</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#kilometersTo\">kilometersTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#milesTo\">milesTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#radiansTo\">radiansTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/614665e77c9ad14617b43a87818f9b0a.html\">InboxQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#inboxType\">inboxType</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#maxId\">maxId</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#owner\">owner</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#sinceId\">sinceId</a></li></ul></li><li><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html\">JobQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#find\">find</a></li><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#skip\">skip</a></li></ul></li><li><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html\">Leaderboard</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.createLeaderboard\">createLeaderboard</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.getLeaderboard\">getLeaderboard</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.getStatistics\">getStatistics</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.updateStatistics\">updateStatistics</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getArchives\">getArchives</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getResults\">getResults</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getResultsAroundUser\">getResultsAroundUser</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#reset\">reset</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#updateUpdateStrategy\">updateUpdateStrategy</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#updateVersionChangeInterval\">updateVersionChangeInterval</a></li></ul></li><li><a href=\"/62182475aa64b9e08c852e0ad358a758.html\">LiveQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/62182475aa64b9e08c852e0ad358a758.html#unsubscribe\">unsubscribe</a></li></ul></li><li><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html\">Object</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.%27new%27\">'new'</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.destroyAll\">destroyAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.extend\">extend</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.fetchAll\">fetchAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.register\">register</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.saveAll\">saveAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#add\">add</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#addUnique\">addUnique</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitAnd\">bitAnd</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitOr\">bitOr</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitXor\">bitXor</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#change\">change</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#changedAttributes\">changedAttributes</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#clear\">clear</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#clone\">clone</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#dirty\">dirty</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#escape\">escape</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#fetchWhenSave\">fetchWhenSave</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#get\">get</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getACL\">getACL</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getCreatedAt\">getCreatedAt</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getObjectId\">getObjectId</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getUpdatedAt\">getUpdatedAt</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#has\">has</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#hasChanged\">hasChanged</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#increment\">increment</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#initialize\">initialize</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#isNew\">isNew</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#isValid\">isValid</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#op\">op</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#previous\">previous</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#previousAttributes\">previousAttributes</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#relation\">relation</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#remove\">remove</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#save\">save</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#set\">set</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#setACL\">setACL</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#toFullJSON\">toFullJSON</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#unset\">unset</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#validate\">validate</a></li></ul></li><li><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html\">Query</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.and\">and</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.doCloudQuery\">doCloudQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.or\">or</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#addAscending\">addAscending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#addDescending\">addDescending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#containedIn\">containedIn</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#contains\">contains</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#containsAll\">containsAll</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#count\">count</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#destroyAll\">destroyAll</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotExist\">doesNotExist</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotMatchKeyInQuery\">doesNotMatchKeyInQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotMatchQuery\">doesNotMatchQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#each\">each</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#endsWith\">endsWith</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#equalTo\">equalTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#exists\">exists</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#find\">find</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#first\">first</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#get\">get</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#greaterThan\">greaterThan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#greaterThanOrEqualTo\">greaterThanOrEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#include\">include</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#includeACL\">includeACL</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#lessThan\">lessThan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#lessThanOrEqualTo\">lessThanOrEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matches\">matches</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matchesKeyInQuery\">matchesKeyInQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matchesQuery\">matchesQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#near\">near</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#notContainedIn\">notContainedIn</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#notEqualTo\">notEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#scan\">scan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#select\">select</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#sizeEqualTo\">sizeEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#skip\">skip</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#startsWith\">startsWith</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#subscribe\">subscribe</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinGeoBox\">withinGeoBox</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinKilometers\">withinKilometers</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinMiles\">withinMiles</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinRadians\">withinRadians</a></li></ul></li><li><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html\">Relation</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#.reverseQuery\">reverseQuery</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#add\">add</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#query\">query</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#remove\">remove</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html\">Role</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getName\">getName</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getRoles\">getRoles</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getUsers\">getUsers</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#setName\">setName</a></li></ul></li><li><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html\">SearchQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#addAscending\">addAscending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#addDescending\">addDescending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#find\">find</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#hasMore\">hasMore</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#highlights\">highlights</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#hits\">hits</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#include\">include</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#queryString\">queryString</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#reset\">reset</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#sid\">sid</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#skip\">skip</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#sortBy\">sortBy</a></li></ul></li><li><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html\">SearchSortBuilder</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#build\">build</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#whereNear\">whereNear</a></li></ul></li><li><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html\">Status</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.countUnreadStatuses\">countUnreadStatuses</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.inboxQuery\">inboxQuery</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.resetUnreadCount\">resetUnreadCount</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.sendPrivateStatus\">sendPrivateStatus</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.sendStatusToFollowers\">sendStatusToFollowers</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.statusQuery\">statusQuery</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#get\">get</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#send\">send</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#set\">set</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#toObject\">toObject</a></li></ul></li><li><a href=\"/dbd38d554704b2eee25bf04c078929b1.html\">User</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.become\">become</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.current\">current</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.currentAsync\">currentAsync</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.followeeQuery\">followeeQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.followerQuery\">followerQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logIn\">logIn</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginAnonymously\">loginAnonymously</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithAuthData\">loginWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithAuthDataAndUnionId\">loginWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logInWithMobilePhone\">logInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logInWithMobilePhoneSmsCode\">logInWithMobilePhoneSmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithWeapp\">loginWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logOut\">logOut</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestEmailVerify\">requestEmailVerify</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestLoginSmsCode\">requestLoginSmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestMobilePhoneVerify\">requestMobilePhoneVerify</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestPasswordReset\">requestPasswordReset</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestPasswordResetBySmsCode\">requestPasswordResetBySmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.resetPasswordBySmsCode\">resetPasswordBySmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUp\">signUp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithAuthData\">signUpOrlogInWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithAuthDataAndUnionId\">signUpOrlogInWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithMobilePhone\">signUpOrlogInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.verifyMobilePhone\">verifyMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#associateWithAuthData\">associateWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#associateWithAuthDataAndUnionId\">associateWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#authenticated\">authenticated</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#dissociateAuthData\">dissociateAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#follow\">follow</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#followeeQuery\">followeeQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#followerQuery\">followerQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getEmail\">getEmail</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getMobilePhoneNumber\">getMobilePhoneNumber</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getRoles\">getRoles</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getSessionToken\">getSessionToken</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getUsername\">getUsername</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#isAuthenticated\">isAuthenticated</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#isCurrent\">isCurrent</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#linkWithWeapp\">linkWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#logIn\">logIn</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithAuthData\">loginWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithAuthDataAndUnionId\">loginWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithWeapp\">loginWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#refreshSessionToken\">refreshSessionToken</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#save\">save</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setEmail\">setEmail</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setMobilePhoneNumber\">setMobilePhoneNumber</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setPassword\">setPassword</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setUsername\">setUsername</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#signUp\">signUp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#signUpOrlogInWithMobilePhone\">signUpOrlogInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#unfollow\">unfollow</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#updatePassword\">updatePassword</a></li></ul></li><li><a href=\"/caf0b0ed77f512ca46c38d8e4eff127d.html\">Statistic</a></li></ul><h3>Events</h3><ul><li><a href=\"/62182475aa64b9e08c852e0ad358a758.html#Events\">AV.LiveQuery</a><ul class=\"events\"><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:create\">create</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:delete\">delete</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:enter\">enter</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:leave\">leave</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:update\">update</a></ul></li></ul><h3>Namespaces</h3><ul><li><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html\">AV</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.init\">init</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.parseJSON\">parseJSON</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.request\">request</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setProduction\">setProduction</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setRequestTimeout\">setRequestTimeout</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setServerURLs\">setServerURLs</a></li></ul></li><li><a href=\"/84da14a070699c1d802d776a83c94381.html\">Cloud</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.getServerDate\">getServerDate</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.requestCaptcha\">requestCaptcha</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.requestSmsCode\">requestSmsCode</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.rpc\">rpc</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.run\">run</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.useMasterKey\">useMasterKey</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.verifyCaptcha\">verifyCaptcha</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.verifySmsCode\">verifySmsCode</a></li></ul></li><li><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html\">Insight</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html#.on\">on</a></li><li data-type=\"method\"><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html#.startJob\">startJob</a></li></ul></li><li><a href=\"/d850dae6459664b88b80f66d22cbb9ec.html\">Push</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/d850dae6459664b88b80f66d22cbb9ec.html#.send\">send</a></li></ul></li></ul><h3><a href=\"/252a41dc0fbbe18dd04851874ffbac52.html\">Global</a></h3>\n</nav>\n\n<div id=\"main\">\n    \n    <h1 class=\"page-title\">user.js</h1>\n    \n\n    \n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>const _ = require('underscore');\nconst uuid = require('uuid/v4');\nconst AVError = require('./error');\nconst { _request: AVRequest, request } = require('./request');\nconst Promise = require('./promise');\n\nconst PLATFORM_ANONYMOUS = 'anonymous';\nconst PLATFORM_WEAPP = 'lc_weapp';\n\nconst getWeappLoginCode = () => {\n  if (typeof wx === 'undefined' || typeof wx.login !== 'function') {\n    throw new Error('Weapp Login is only available in Weapp');\n  }\n  return new Promise((resolve, reject) => {\n    wx.login({\n      success: ({ code, errMsg }) => {\n        if (code) {\n          resolve(code);\n        } else {\n          reject(new Error(errMsg));\n        }\n      },\n      fail: () => reject(new Error('wx.login 失败')),\n    });\n  });\n};\n\nconst mergeUnionDataIntoAuthData = (\n  authData,\n  unionId,\n  { unionIdPlatform = 'weixin', asMainAccount = false } = {}\n) => {\n  if (typeof unionId !== 'string')\n    throw new AVError(AVError.OTHER_CAUSE, 'unionId is not a string');\n  if (typeof unionIdPlatform !== 'string')\n    throw new AVError(AVError.OTHER_CAUSE, 'unionIdPlatform is not a string');\n\n  return _.extend({}, authData, {\n    platform: unionIdPlatform,\n    unionid: unionId,\n    main_account: Boolean(asMainAccount),\n  });\n};\n\nmodule.exports = function(AV) {\n  /**\n   * @class\n   *\n   * &lt;p>An AV.User object is a local representation of a user persisted to the\n   * LeanCloud server. This class is a subclass of an AV.Object, and retains the\n   * same functionality of an AV.Object, but also extends it with various\n   * user specific methods, like authentication, signing up, and validation of\n   * uniqueness.&lt;/p>\n   */\n  AV.User = AV.Object.extend(\n    '_User',\n    /** @lends AV.User.prototype */ {\n      // Instance Variables\n      _isCurrentUser: false,\n\n      // Instance Methods\n\n      /**\n       * Internal method to handle special fields in a _User response.\n       * @private\n       */\n      _mergeMagicFields: function(attrs) {\n        if (attrs.sessionToken) {\n          this._sessionToken = attrs.sessionToken;\n          delete attrs.sessionToken;\n        }\n        return AV.User.__super__._mergeMagicFields.call(this, attrs);\n      },\n\n      /**\n       * Removes null values from authData (which exist temporarily for\n       * unlinking)\n       * @private\n       */\n      _cleanupAuthData: function() {\n        if (!this.isCurrent()) {\n          return;\n        }\n        var authData = this.get('authData');\n        if (!authData) {\n          return;\n        }\n        AV._objectEach(this.get('authData'), function(value, key) {\n          if (!authData[key]) {\n            delete authData[key];\n          }\n        });\n      },\n\n      /**\n       * Synchronizes authData for all providers.\n       * @private\n       */\n      _synchronizeAllAuthData: function() {\n        var authData = this.get('authData');\n        if (!authData) {\n          return;\n        }\n\n        var self = this;\n        AV._objectEach(this.get('authData'), function(value, key) {\n          self._synchronizeAuthData(key);\n        });\n      },\n\n      /**\n       * Synchronizes auth data for a provider (e.g. puts the access token in the\n       * right place to be used by the Facebook SDK).\n       * @private\n       */\n      _synchronizeAuthData: function(provider) {\n        if (!this.isCurrent()) {\n          return;\n        }\n        var authType;\n        if (_.isString(provider)) {\n          authType = provider;\n          provider = AV.User._authProviders[authType];\n        } else {\n          authType = provider.getAuthType();\n        }\n        var authData = this.get('authData');\n        if (!authData || !provider) {\n          return;\n        }\n        var success = provider.restoreAuthentication(authData[authType]);\n        if (!success) {\n          this.dissociateAuthData(provider);\n        }\n      },\n\n      _handleSaveResult: function(makeCurrent) {\n        // Clean up and synchronize the authData object, removing any unset values\n        if (makeCurrent &amp;&amp; !AV._config.disableCurrentUser) {\n          this._isCurrentUser = true;\n        }\n        this._cleanupAuthData();\n        this._synchronizeAllAuthData();\n        // Don't keep the password around.\n        delete this._serverData.password;\n        this._rebuildEstimatedDataForKey('password');\n        this._refreshCache();\n        if (\n          (makeCurrent || this.isCurrent()) &amp;&amp;\n          !AV._config.disableCurrentUser\n        ) {\n          // Some old version of leanengine-node-sdk will overwrite\n          // AV.User._saveCurrentUser which returns no Promise.\n          // So we need a Promise wrapper.\n          return Promise.resolve(AV.User._saveCurrentUser(this));\n        } else {\n          return Promise.resolve();\n        }\n      },\n\n      /**\n       * Unlike in the Android/iOS SDKs, logInWith is unnecessary, since you can\n       * call linkWith on the user (even if it doesn't exist yet on the server).\n       * @private\n       */\n      _linkWith: function(provider, data, { failOnNotExist = false } = {}) {\n        var authType;\n        if (_.isString(provider)) {\n          authType = provider;\n          provider = AV.User._authProviders[provider];\n        } else {\n          authType = provider.getAuthType();\n        }\n        if (data) {\n          return this.save(\n            { authData: { [authType]: data } },\n            {\n              fetchWhenSave: !!this.get('authData'),\n              _failOnNotExist: failOnNotExist,\n            }\n          ).then(function(model) {\n            return model._handleSaveResult(true).then(function() {\n              return model;\n            });\n          });\n        } else {\n          return provider\n            .authenticate()\n            .then(result => this._linkWith(provider, result));\n        }\n      },\n\n      /**\n       * Associate the user with a third party authData.\n       * @since 3.3.0\n       * @param {Object} authData The response json data returned from third party token, maybe like { openid: 'abc123', access_token: '123abc', expires_in: 1382686496 }\n       * @param {string} platform Available platform for sign up.\n       * @return {Promise&lt;AV.User>} A promise that is fulfilled with the user when completed.\n       * @example user.associateWithAuthData({\n       *   openid: 'abc123',\n       *   access_token: '123abc',\n       *   expires_in: 1382686496\n       * }, 'weixin').then(function(user) {\n       *   //Access user here\n       * }).catch(function(error) {\n       *   //console.error(\"error: \", error);\n       * });\n       */\n      associateWithAuthData(authData, platform) {\n        return this._linkWith(platform, authData);\n      },\n\n      /**\n       * Associate the user with a third party authData and unionId.\n       * @since 3.5.0\n       * @param {Object} authData The response json data returned from third party token, maybe like { openid: 'abc123', access_token: '123abc', expires_in: 1382686496 }\n       * @param {string} platform Available platform for sign up.\n       * @param {string} unionId\n       * @param {Object} [unionLoginOptions]\n       * @param {string} [unionLoginOptions.unionIdPlatform = 'weixin'] unionId platform\n       * @param {boolean} [unionLoginOptions.asMainAccount = false] If true, the unionId will be associated with the user.\n       * @return {Promise&lt;AV.User>} A promise that is fulfilled with the user when completed.\n       * @example user.associateWithAuthDataAndUnionId({\n       *   openid: 'abc123',\n       *   access_token: '123abc',\n       *   expires_in: 1382686496\n       * }, 'weixin', 'union123', {\n       *   unionIdPlatform: 'weixin',\n       *   asMainAccount: true,\n       * }).then(function(user) {\n       *   //Access user here\n       * }).catch(function(error) {\n       *   //console.error(\"error: \", error);\n       * });\n       */\n      associateWithAuthDataAndUnionId(\n        authData,\n        platform,\n        unionId,\n        unionLoginOptions\n      ) {\n        return this._linkWith(\n          platform,\n          mergeUnionDataIntoAuthData(authData, unionId, unionLoginOptions)\n        );\n      },\n\n      /**\n       * 将用户与小程序用户进行关联。适用于为已经在用户系统中存在的用户关联当前使用小程序的微信帐号。\n       * 仅在小程序中可用。\n       *\n       * @return {Promise&lt;AV.User>}\n       */\n      linkWithWeapp() {\n        return getWeappLoginCode().then(code =>\n          this._linkWith(PLATFORM_WEAPP, { code })\n        );\n      },\n\n      /**\n       * Unlinks a user from a service.\n       * @param {string} platform\n       * @return {Promise&lt;AV.User>}\n       * @since 3.3.0\n       */\n      dissociateAuthData(provider) {\n        this.unset(`authData.${provider}`);\n        return this.save().then(model =>\n          model._handleSaveResult(true).then(() => model)\n        );\n      },\n\n      /**\n       * @private\n       * @deprecated\n       */\n      _unlinkFrom(provider) {\n        console.warn(\n          'DEPRECATED: User#_unlinkFrom 已废弃，请使用 User#dissociateAuthData 代替'\n        );\n        return this.dissociateAuthData(provider);\n      },\n\n      /**\n       * Checks whether a user is linked to a service.\n       * @private\n       */\n      _isLinked: function(provider) {\n        var authType;\n        if (_.isString(provider)) {\n          authType = provider;\n        } else {\n          authType = provider.getAuthType();\n        }\n        var authData = this.get('authData') || {};\n        return !!authData[authType];\n      },\n\n      isAnonymous() {\n        return this._isLinked(PLATFORM_ANONYMOUS);\n      },\n\n      logOut: function() {\n        this._logOutWithAll();\n        this._isCurrentUser = false;\n      },\n\n      /**\n       * Deauthenticates all providers.\n       * @private\n       */\n      _logOutWithAll: function() {\n        var authData = this.get('authData');\n        if (!authData) {\n          return;\n        }\n        var self = this;\n        AV._objectEach(this.get('authData'), function(value, key) {\n          self._logOutWith(key);\n        });\n      },\n\n      /**\n       * Deauthenticates a single provider (e.g. removing access tokens from the\n       * Facebook SDK).\n       * @private\n       */\n      _logOutWith: function(provider) {\n        if (!this.isCurrent()) {\n          return;\n        }\n        if (_.isString(provider)) {\n          provider = AV.User._authProviders[provider];\n        }\n        if (provider &amp;&amp; provider.deauthenticate) {\n          provider.deauthenticate();\n        }\n      },\n\n      /**\n       * Signs up a new user. You should call this instead of save for\n       * new AV.Users. This will create a new AV.User on the server, and\n       * also persist the session on disk so that you can access the user using\n       * &lt;code>current&lt;/code>.\n       *\n       * &lt;p>A username and password must be set before calling signUp.&lt;/p>\n       *\n       * @param {Object} attrs Extra fields to set on the new user, or null.\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is fulfilled when the signup\n       *     finishes.\n       * @see AV.User.signUp\n       */\n      signUp: function(attrs, options) {\n        var error;\n\n        var username = (attrs &amp;&amp; attrs.username) || this.get('username');\n        if (!username || username === '') {\n          error = new AVError(\n            AVError.OTHER_CAUSE,\n            'Cannot sign up user with an empty name.'\n          );\n          throw error;\n        }\n\n        var password = (attrs &amp;&amp; attrs.password) || this.get('password');\n        if (!password || password === '') {\n          error = new AVError(\n            AVError.OTHER_CAUSE,\n            'Cannot sign up user with an empty password.'\n          );\n          throw error;\n        }\n\n        return this.save(attrs, options).then(function(model) {\n          if (model.isAnonymous()) {\n            model.unset(`authData.${PLATFORM_ANONYMOUS}`);\n            model._opSetQueue = [{}];\n          }\n          return model._handleSaveResult(true).then(function() {\n            return model;\n          });\n        });\n      },\n\n      /**\n       * Signs up a new user with mobile phone and sms code.\n       * You should call this instead of save for\n       * new AV.Users. This will create a new AV.User on the server, and\n       * also persist the session on disk so that you can access the user using\n       * &lt;code>current&lt;/code>.\n       *\n       * &lt;p>A username and password must be set before calling signUp.&lt;/p>\n       *\n       * @param {Object} attrs Extra fields to set on the new user, or null.\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is fulfilled when the signup\n       *     finishes.\n       * @see AV.User.signUpOrlogInWithMobilePhone\n       * @see AV.Cloud.requestSmsCode\n       */\n      signUpOrlogInWithMobilePhone: function(attrs, options = {}) {\n        var error;\n\n        var mobilePhoneNumber =\n          (attrs &amp;&amp; attrs.mobilePhoneNumber) || this.get('mobilePhoneNumber');\n        if (!mobilePhoneNumber || mobilePhoneNumber === '') {\n          error = new AVError(\n            AVError.OTHER_CAUSE,\n            'Cannot sign up or login user by mobilePhoneNumber ' +\n              'with an empty mobilePhoneNumber.'\n          );\n          throw error;\n        }\n\n        var smsCode = (attrs &amp;&amp; attrs.smsCode) || this.get('smsCode');\n        if (!smsCode || smsCode === '') {\n          error = new AVError(\n            AVError.OTHER_CAUSE,\n            'Cannot sign up or login user by mobilePhoneNumber  ' +\n              'with an empty smsCode.'\n          );\n          throw error;\n        }\n\n        options._makeRequest = function(route, className, id, method, json) {\n          return AVRequest('usersByMobilePhone', null, null, 'POST', json);\n        };\n        return this.save(attrs, options).then(function(model) {\n          delete model.attributes.smsCode;\n          delete model._serverData.smsCode;\n          return model._handleSaveResult(true).then(function() {\n            return model;\n          });\n        });\n      },\n\n      /**\n       * The same with {@link AV.User.loginWithAuthData}, except that you can set attributes before login.\n       * @since 3.7.0\n       */\n      loginWithAuthData(authData, platform, options) {\n        return this._linkWith(platform, authData, options);\n      },\n\n      /**\n       * The same with {@link AV.User.loginWithAuthDataAndUnionId}, except that you can set attributes before login.\n       * @since 3.7.0\n       */\n      loginWithAuthDataAndUnionId(\n        authData,\n        platform,\n        unionId,\n        unionLoginOptions\n      ) {\n        return this.loginWithAuthData(\n          mergeUnionDataIntoAuthData(authData, unionId, unionLoginOptions),\n          platform,\n          unionLoginOptions\n        );\n      },\n\n      /**\n       * The same with {@link AV.User.loginWithWeapp}, except that you can set attributes before login.\n       * @since 3.7.0\n       */\n      loginWithWeapp(options) {\n        return getWeappLoginCode().then(code =>\n          this.loginWithAuthData({ code }, PLATFORM_WEAPP, options)\n        );\n      },\n\n      /**\n       * Logs in a AV.User. On success, this saves the session to localStorage,\n       * so you can retrieve the currently logged in user using\n       * &lt;code>current&lt;/code>.\n       *\n       * &lt;p>A username and password must be set before calling logIn.&lt;/p>\n       *\n       * @see AV.User.logIn\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login is complete.\n       */\n      logIn: function() {\n        var model = this;\n        var request = AVRequest('login', null, null, 'POST', this.toJSON());\n        return request.then(function(resp) {\n          var serverAttrs = model.parse(resp);\n          model._finishFetch(serverAttrs);\n          return model._handleSaveResult(true).then(function() {\n            if (!serverAttrs.smsCode) delete model.attributes['smsCode'];\n            return model;\n          });\n        });\n      },\n      /**\n       * @see AV.Object#save\n       */\n      save: function(arg1, arg2, arg3) {\n        var i, attrs, current, options, saved;\n        if (_.isObject(arg1) || _.isNull(arg1) || _.isUndefined(arg1)) {\n          attrs = arg1;\n          options = arg2;\n        } else {\n          attrs = {};\n          attrs[arg1] = arg2;\n          options = arg3;\n        }\n        options = options || {};\n\n        return AV.Object.prototype.save\n          .call(this, attrs, options)\n          .then(function(model) {\n            return model._handleSaveResult(false).then(function() {\n              return model;\n            });\n          });\n      },\n\n      /**\n       * Follow a user\n       * @since 0.3.0\n       * @param {Object | AV.User | String} options if an AV.User or string is given, it will be used as the target user.\n       * @param {AV.User | String} options.user The target user or user's objectId to follow.\n       * @param {Object} [options.attributes] key-value attributes dictionary to be used as\n       *  conditions of followerQuery/followeeQuery.\n       * @param {AuthOptions} [authOptions]\n       */\n      follow: function(options, authOptions) {\n        if (!this.id) {\n          throw new Error('Please signin.');\n        }\n        let user;\n        let attributes;\n        if (options.user) {\n          user = options.user;\n          attributes = options.attributes;\n        } else {\n          user = options;\n        }\n        var userObjectId = _.isString(user) ? user : user.id;\n        if (!userObjectId) {\n          throw new Error('Invalid target user.');\n        }\n        var route = 'users/' + this.id + '/friendship/' + userObjectId;\n        var request = AVRequest(\n          route,\n          null,\n          null,\n          'POST',\n          AV._encode(attributes),\n          authOptions\n        );\n        return request;\n      },\n\n      /**\n       * Unfollow a user.\n       * @since 0.3.0\n       * @param {Object | AV.User | String} options if an AV.User or string is given, it will be used as the target user.\n       * @param {AV.User | String} options.user The target user or user's objectId to unfollow.\n       * @param {AuthOptions} [authOptions]\n       */\n      unfollow: function(options, authOptions) {\n        if (!this.id) {\n          throw new Error('Please signin.');\n        }\n        let user;\n        if (options.user) {\n          user = options.user;\n        } else {\n          user = options;\n        }\n        var userObjectId = _.isString(user) ? user : user.id;\n        if (!userObjectId) {\n          throw new Error('Invalid target user.');\n        }\n        var route = 'users/' + this.id + '/friendship/' + userObjectId;\n        var request = AVRequest(route, null, null, 'DELETE', null, authOptions);\n        return request;\n      },\n\n      /**\n       *Create a follower query to query the user's followers.\n       * @since 0.3.0\n       * @see AV.User#followerQuery\n       */\n      followerQuery: function() {\n        return AV.User.followerQuery(this.id);\n      },\n\n      /**\n       *Create a followee query to query the user's followees.\n       * @since 0.3.0\n       * @see AV.User#followeeQuery\n       */\n      followeeQuery: function() {\n        return AV.User.followeeQuery(this.id);\n      },\n\n      /**\n       * @see AV.Object#fetch\n       */\n      fetch: function(fetchOptions, options) {\n        return AV.Object.prototype.fetch\n          .call(this, fetchOptions, options)\n          .then(function(model) {\n            return model._handleSaveResult(false).then(function() {\n              return model;\n            });\n          });\n      },\n\n      /**\n       * Update user's new password safely based on old password.\n       * @param {String} oldPassword the old password.\n       * @param {String} newPassword the new password.\n       * @param {AuthOptions} options\n       */\n      updatePassword: function(oldPassword, newPassword, options) {\n        var route = 'users/' + this.id + '/updatePassword';\n        var params = {\n          old_password: oldPassword,\n          new_password: newPassword,\n        };\n        var request = AVRequest(route, null, null, 'PUT', params, options);\n        return request;\n      },\n\n      /**\n       * Returns true if &lt;code>current&lt;/code> would return this user.\n       * @see AV.User#current\n       */\n      isCurrent: function() {\n        return this._isCurrentUser;\n      },\n\n      /**\n       * Returns get(\"username\").\n       * @return {String}\n       * @see AV.Object#get\n       */\n      getUsername: function() {\n        return this.get('username');\n      },\n\n      /**\n       * Returns get(\"mobilePhoneNumber\").\n       * @return {String}\n       * @see AV.Object#get\n       */\n      getMobilePhoneNumber: function() {\n        return this.get('mobilePhoneNumber');\n      },\n\n      /**\n       * Calls set(\"mobilePhoneNumber\", phoneNumber, options) and returns the result.\n       * @param {String} mobilePhoneNumber\n       * @return {Boolean}\n       * @see AV.Object#set\n       */\n      setMobilePhoneNumber: function(phone, options) {\n        return this.set('mobilePhoneNumber', phone, options);\n      },\n\n      /**\n       * Calls set(\"username\", username, options) and returns the result.\n       * @param {String} username\n       * @return {Boolean}\n       * @see AV.Object#set\n       */\n      setUsername: function(username, options) {\n        return this.set('username', username, options);\n      },\n\n      /**\n       * Calls set(\"password\", password, options) and returns the result.\n       * @param {String} password\n       * @return {Boolean}\n       * @see AV.Object#set\n       */\n      setPassword: function(password, options) {\n        return this.set('password', password, options);\n      },\n\n      /**\n       * Returns get(\"email\").\n       * @return {String}\n       * @see AV.Object#get\n       */\n      getEmail: function() {\n        return this.get('email');\n      },\n\n      /**\n       * Calls set(\"email\", email, options) and returns the result.\n       * @param {String} email\n       * @param {AuthOptions} options\n       * @return {Boolean}\n       * @see AV.Object#set\n       */\n      setEmail: function(email, options) {\n        return this.set('email', email, options);\n      },\n\n      /**\n       * Checks whether this user is the current user and has been authenticated.\n       * @deprecated 如果要判断当前用户的登录状态是否有效，请使用 currentUser.isAuthenticated().then()，\n       * 如果要判断该用户是否是当前登录用户，请使用 user.id === currentUser.id\n       * @return (Boolean) whether this user is the current user and is logged in.\n       */\n      authenticated: function() {\n        console.warn(\n          'DEPRECATED: 如果要判断当前用户的登录状态是否有效，请使用 currentUser.isAuthenticated().then()，如果要判断该用户是否是当前登录用户，请使用 user.id === currentUser.id。'\n        );\n        return (\n          !!this._sessionToken &amp;&amp;\n          (!AV._config.disableCurrentUser &amp;&amp;\n            AV.User.current() &amp;&amp;\n            AV.User.current().id === this.id)\n        );\n      },\n\n      /**\n       * 检查该用户的登录状态是否有效，请注意该方法会校验 sessionToken 的有效性，是个异步方法。\n       *\n       * @since 2.0.0\n       * @return Promise.&lt;Boolean>\n       */\n      isAuthenticated() {\n        return Promise.resolve().then(\n          () =>\n            !!this._sessionToken &amp;&amp;\n            AV.User._fetchUserBySessionToken(this._sessionToken).then(\n              () => true,\n              error => {\n                if (error.code === 211) {\n                  return false;\n                }\n                throw error;\n              }\n            )\n        );\n      },\n\n      /**\n       * Get sessionToken of current user.\n       * @return {String} sessionToken\n       */\n      getSessionToken() {\n        return this._sessionToken;\n      },\n\n      /**\n       * Refresh sessionToken of current user.\n       * @since 2.1.0\n       * @param {AuthOptions} [options]\n       * @return {Promise.&lt;AV.User>} user with refreshed sessionToken\n       */\n      refreshSessionToken(options) {\n        return AVRequest(\n          `users/${this.id}/refreshSessionToken`,\n          null,\n          null,\n          'PUT',\n          null,\n          options\n        ).then(response => {\n          this._finishFetch(response);\n          return this._handleSaveResult(true).then(() => this);\n        });\n      },\n\n      /**\n       * Get this user's Roles.\n       * @param {AuthOptions} [options]\n       * @return {Promise.&lt;AV.Role[]>} A promise that is fulfilled with the roles when\n       *     the query is complete.\n       */\n      getRoles(options) {\n        return AV.Relation.reverseQuery('_Role', 'users', this).find(options);\n      },\n    },\n    /** @lends AV.User */ {\n      // Class Variables\n\n      // The currently logged-in user.\n      _currentUser: null,\n\n      // Whether currentUser is known to match the serialized version on disk.\n      // This is useful for saving a localstorage check if you try to load\n      // _currentUser frequently while there is none stored.\n      _currentUserMatchesDisk: false,\n\n      // The localStorage key suffix that the current user is stored under.\n      _CURRENT_USER_KEY: 'currentUser',\n\n      // The mapping of auth provider names to actual providers\n      _authProviders: {},\n\n      // Class Methods\n\n      /**\n       * Signs up a new user with a username (or email) and password.\n       * This will create a new AV.User on the server, and also persist the\n       * session in localStorage so that you can access the user using\n       * {@link #current}.\n       *\n       * @param {String} username The username (or email) to sign up with.\n       * @param {String} password The password to sign up with.\n       * @param {Object} [attrs] Extra fields to set on the new user.\n       * @param {AuthOptions} [options]\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the signup completes.\n       * @see AV.User#signUp\n       */\n      signUp: function(username, password, attrs, options) {\n        attrs = attrs || {};\n        attrs.username = username;\n        attrs.password = password;\n        var user = AV.Object._create('_User');\n        return user.signUp(attrs, options);\n      },\n\n      /**\n       * Logs in a user with a username (or email) and password. On success, this\n       * saves the session to disk, so you can retrieve the currently logged in\n       * user using &lt;code>current&lt;/code>.\n       *\n       * @param {String} username The username (or email) to log in with.\n       * @param {String} password The password to log in with.\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       * @see AV.User#logIn\n       */\n      logIn: function(username, password) {\n        var user = AV.Object._create('_User');\n        user._finishFetch({ username: username, password: password });\n        return user.logIn();\n      },\n\n      /**\n       * Logs in a user with a session token. On success, this saves the session\n       * to disk, so you can retrieve the currently logged in user using\n       * &lt;code>current&lt;/code>.\n       *\n       * @param {String} sessionToken The sessionToken to log in with.\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       */\n      become: function(sessionToken) {\n        return this._fetchUserBySessionToken(sessionToken).then(user =>\n          user._handleSaveResult(true).then(() => user)\n        );\n      },\n\n      _fetchUserBySessionToken: function(sessionToken) {\n        var user = AV.Object._create('_User');\n        return request({\n          method: 'GET',\n          path: '/users/me',\n          authOptions: {\n            sessionToken,\n          },\n        }).then(function(resp) {\n          var serverAttrs = user.parse(resp);\n          user._finishFetch(serverAttrs);\n          return user;\n        });\n      },\n\n      /**\n       * Logs in a user with a mobile phone number and sms code sent by\n       * AV.User.requestLoginSmsCode.On success, this\n       * saves the session to disk, so you can retrieve the currently logged in\n       * user using &lt;code>current&lt;/code>.\n       *\n       * @param {String} mobilePhone The user's mobilePhoneNumber\n       * @param {String} smsCode The sms code sent by AV.User.requestLoginSmsCode\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       * @see AV.User#logIn\n       */\n      logInWithMobilePhoneSmsCode: function(mobilePhone, smsCode) {\n        var user = AV.Object._create('_User');\n        user._finishFetch({ mobilePhoneNumber: mobilePhone, smsCode: smsCode });\n        return user.logIn();\n      },\n\n      /**\n       * Sign up or logs in a user with a mobilePhoneNumber and smsCode.\n       * On success, this saves the session to disk, so you can retrieve the currently\n       * logged in user using &lt;code>current&lt;/code>.\n       *\n       * @param {String} mobilePhoneNumber The user's mobilePhoneNumber.\n       * @param {String} smsCode The sms code sent by AV.Cloud.requestSmsCode\n       * @param {Object} attributes  The user's other attributes such as username etc.\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       * @see AV.User#signUpOrlogInWithMobilePhone\n       * @see AV.Cloud.requestSmsCode\n       */\n      signUpOrlogInWithMobilePhone: function(\n        mobilePhoneNumber,\n        smsCode,\n        attrs,\n        options\n      ) {\n        attrs = attrs || {};\n        attrs.mobilePhoneNumber = mobilePhoneNumber;\n        attrs.smsCode = smsCode;\n        var user = AV.Object._create('_User');\n        return user.signUpOrlogInWithMobilePhone(attrs, options);\n      },\n\n      /**\n       * Logs in a user with a mobile phone number and password. On success, this\n       * saves the session to disk, so you can retrieve the currently logged in\n       * user using &lt;code>current&lt;/code>.\n       *\n       * @param {String} mobilePhone The user's mobilePhoneNumber\n       * @param {String} password The password to log in with.\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       * @see AV.User#logIn\n       */\n      logInWithMobilePhone: function(mobilePhone, password) {\n        var user = AV.Object._create('_User');\n        user._finishFetch({\n          mobilePhoneNumber: mobilePhone,\n          password: password,\n        });\n        return user.logIn();\n      },\n\n      /**\n       * Sign up or logs in a user with a third party auth data(AccessToken).\n       * On success, this saves the session to disk, so you can retrieve the currently\n       * logged in user using &lt;code>current&lt;/code>.\n       *\n       * @since 3.7.0\n       * @param {Object} authData The response json data returned from third party token, maybe like { openid: 'abc123', access_token: '123abc', expires_in: 1382686496 }\n       * @param {string} platform Available platform for sign up.\n       * @param {Object} [options]\n       * @param {boolean} [options.failOnNotExist] If true, the login request will fail when no user matches this authData exists.\n       * @return {Promise} A promise that is fulfilled with the user when\n       *     the login completes.\n       * @example AV.User.loginWithAuthData({\n       *   openid: 'abc123',\n       *   access_token: '123abc',\n       *   expires_in: 1382686496\n       * }, 'weixin').then(function(user) {\n       *   //Access user here\n       * }).catch(function(error) {\n       *   //console.error(\"error: \", error);\n       * });\n       * @see {@link https://leancloud.cn/docs/js_guide.html#绑定第三方平台账户}\n       */\n      loginWithAuthData(authData, platform, options) {\n        return AV.User._logInWith(platform, authData, options);\n      },\n\n      /**\n       * @deprecated renamed to {@link AV.User.loginWithAuthData}\n       */\n      signUpOrlogInWithAuthData(...param) {\n        console.warn(\n          'DEPRECATED: User.signUpOrlogInWithAuthData 已废弃，请使用 User#loginWithAuthData 代替'\n        );\n        return this.loginWithAuthData(...param);\n      },\n\n      /**\n       * Sign up or logs in a user with a third party authData and unionId.\n       * @since 3.7.0\n       * @param {Object} authData The response json data returned from third party token, maybe like { openid: 'abc123', access_token: '123abc', expires_in: 1382686496 }\n       * @param {string} platform Available platform for sign up.\n       * @param {string} unionId\n       * @param {Object} [unionLoginOptions]\n       * @param {string} [unionLoginOptions.unionIdPlatform = 'weixin'] unionId platform\n       * @param {boolean} [unionLoginOptions.asMainAccount = false] If true, the unionId will be associated with the user.\n       * @param {boolean} [unionLoginOptions.failOnNotExist] If true, the login request will fail when no user matches this authData exists.\n       * @return {Promise&lt;AV.User>} A promise that is fulfilled with the user when completed.\n       * @example AV.User.loginWithAuthDataAndUnionId({\n       *   openid: 'abc123',\n       *   access_token: '123abc',\n       *   expires_in: 1382686496\n       * }, 'weixin', 'union123', {\n       *   unionIdPlatform: 'weixin',\n       *   asMainAccount: true,\n       * }).then(function(user) {\n       *   //Access user here\n       * }).catch(function(error) {\n       *   //console.error(\"error: \", error);\n       * });\n       */\n      loginWithAuthDataAndUnionId(\n        authData,\n        platform,\n        unionId,\n        unionLoginOptions\n      ) {\n        return this.loginWithAuthData(\n          mergeUnionDataIntoAuthData(authData, unionId, unionLoginOptions),\n          platform,\n          unionLoginOptions\n        );\n      },\n\n      /**\n       * @deprecated renamed to {@link AV.User.loginWithAuthDataAndUnionId}\n       * @since 3.5.0\n       */\n      signUpOrlogInWithAuthDataAndUnionId(...param) {\n        console.warn(\n          'DEPRECATED: User.signUpOrlogInWithAuthDataAndUnionId 已废弃，请使用 User#loginWithAuthDataAndUnionId 代替'\n        );\n        return this.loginWithAuthDataAndUnionId(...param);\n      },\n\n      /**\n       * 使用当前使用小程序的微信用户身份注册或登录，成功后用户的 session 会在设备上持久化保存，之后可以使用 AV.User.current() 获取当前登录用户。\n       * 仅在小程序中可用。\n       *\n       * @since 2.0.0\n       * @param {Object} [options]\n       * @param {boolean} [options.failOnNotExist] If true, the login request will fail when no user matches this authData exists. (since v3.7.0)\n       * @return {Promise.&lt;AV.User>}\n       */\n      loginWithWeapp(options) {\n        return getWeappLoginCode().then(code =>\n          this.loginWithAuthData({ code }, PLATFORM_WEAPP, options)\n        );\n      },\n\n      /**\n       * Creates an anonymous user.\n       *\n       * @since 3.9.0\n       * @return {Promise.&lt;AV.User>}\n       */\n      loginAnonymously() {\n        return this.loginWithAuthData(\n          {\n            id: uuid(),\n          },\n          'anonymous'\n        );\n      },\n\n      associateWithAuthData(userObj, platform, authData) {\n        console.warn(\n          'DEPRECATED: User.associateWithAuthData 已废弃，请使用 User#associateWithAuthData 代替'\n        );\n        return userObj._linkWith(platform, authData);\n      },\n      /**\n       * Logs out the currently logged in user session. This will remove the\n       * session from disk, log out of linked services, and future calls to\n       * &lt;code>current&lt;/code> will return &lt;code>null&lt;/code>.\n       * @return {Promise}\n       */\n      logOut: function() {\n        if (AV._config.disableCurrentUser) {\n          console.warn(\n            'AV.User.current() was disabled in multi-user environment, call logOut() from user object instead https://leancloud.cn/docs/leanengine-node-sdk-upgrade-1.html'\n          );\n          return Promise.resolve(null);\n        }\n\n        if (AV.User._currentUser !== null) {\n          AV.User._currentUser._logOutWithAll();\n          AV.User._currentUser._isCurrentUser = false;\n        }\n        AV.User._currentUserMatchesDisk = true;\n        AV.User._currentUser = null;\n        return AV.localStorage\n          .removeItemAsync(AV._getAVPath(AV.User._CURRENT_USER_KEY))\n          .then(() => AV._refreshSubscriptionId());\n      },\n\n      /**\n       *Create a follower query for special user to query the user's followers.\n       * @param {String} userObjectId The user object id.\n       * @return {AV.FriendShipQuery}\n       * @since 0.3.0\n       */\n      followerQuery: function(userObjectId) {\n        if (!userObjectId || !_.isString(userObjectId)) {\n          throw new Error('Invalid user object id.');\n        }\n        var query = new AV.FriendShipQuery('_Follower');\n        query._friendshipTag = 'follower';\n        query.equalTo(\n          'user',\n          AV.Object.createWithoutData('_User', userObjectId)\n        );\n        return query;\n      },\n\n      /**\n       *Create a followee query for special user to query the user's followees.\n       * @param {String} userObjectId The user object id.\n       * @return {AV.FriendShipQuery}\n       * @since 0.3.0\n       */\n      followeeQuery: function(userObjectId) {\n        if (!userObjectId || !_.isString(userObjectId)) {\n          throw new Error('Invalid user object id.');\n        }\n        var query = new AV.FriendShipQuery('_Followee');\n        query._friendshipTag = 'followee';\n        query.equalTo(\n          'user',\n          AV.Object.createWithoutData('_User', userObjectId)\n        );\n        return query;\n      },\n\n      /**\n       * Requests a password reset email to be sent to the specified email address\n       * associated with the user account. This email allows the user to securely\n       * reset their password on the AV site.\n       *\n       * @param {String} email The email address associated with the user that\n       *     forgot their password.\n       * @return {Promise}\n       */\n      requestPasswordReset: function(email) {\n        var json = { email: email };\n        var request = AVRequest(\n          'requestPasswordReset',\n          null,\n          null,\n          'POST',\n          json\n        );\n        return request;\n      },\n\n      /**\n       * Requests a verify email to be sent to the specified email address\n       * associated with the user account. This email allows the user to securely\n       * verify their email address on the AV site.\n       *\n       * @param {String} email The email address associated with the user that\n       *     doesn't verify their email address.\n       * @return {Promise}\n       */\n      requestEmailVerify: function(email) {\n        var json = { email: email };\n        var request = AVRequest('requestEmailVerify', null, null, 'POST', json);\n        return request;\n      },\n\n      /**\n       * Requests a verify sms code to be sent to the specified mobile phone\n       * number associated with the user account. This sms code allows the user to\n       * verify their mobile phone number by calling AV.User.verifyMobilePhone\n       *\n       * @param {String} mobilePhoneNumber The mobile phone number associated with the\n       *                  user that doesn't verify their mobile phone number.\n       * @param {AuthOptions} [options] AuthOptions plus:\n       * @param {String} [options.validateToken] a validate token returned by {@link AV.Cloud.verifyCaptcha}\n       * @return {Promise}\n       */\n      requestMobilePhoneVerify: function(mobilePhoneNumber, options = {}) {\n        const data = {\n          mobilePhoneNumber,\n        };\n        if (options.validateToken) {\n          data.validate_token = options.validateToken;\n        }\n        var request = AVRequest(\n          'requestMobilePhoneVerify',\n          null,\n          null,\n          'POST',\n          data,\n          options\n        );\n        return request;\n      },\n\n      /**\n       * Requests a reset password sms code to be sent to the specified mobile phone\n       * number associated with the user account. This sms code allows the user to\n       * reset their account's password by calling AV.User.resetPasswordBySmsCode\n       *\n       * @param {String} mobilePhoneNumber The mobile phone number  associated with the\n       *                  user that doesn't verify their mobile phone number.\n       * @param {AuthOptions} [options] AuthOptions plus:\n       * @param {String} [options.validateToken] a validate token returned by {@link AV.Cloud.verifyCaptcha}\n       * @return {Promise}\n       */\n      requestPasswordResetBySmsCode: function(mobilePhoneNumber, options = {}) {\n        const data = {\n          mobilePhoneNumber,\n        };\n        if (options.validateToken) {\n          data.validate_token = options.validateToken;\n        }\n        var request = AVRequest(\n          'requestPasswordResetBySmsCode',\n          null,\n          null,\n          'POST',\n          data,\n          options\n        );\n        return request;\n      },\n\n      /**\n       * Makes a call to reset user's account password by sms code and new password.\n       * The sms code is sent by AV.User.requestPasswordResetBySmsCode.\n       * @param {String} code The sms code sent by AV.User.Cloud.requestSmsCode\n       * @param {String} password The new password.\n       * @return {Promise} A promise that will be resolved with the result\n       * of the function.\n       */\n      resetPasswordBySmsCode: function(code, password) {\n        var json = { password: password };\n        var request = AVRequest(\n          'resetPasswordBySmsCode',\n          null,\n          code,\n          'PUT',\n          json\n        );\n        return request;\n      },\n\n      /**\n       * Makes a call to verify sms code that sent by AV.User.Cloud.requestSmsCode\n       * If verify successfully,the user mobilePhoneVerified attribute will be true.\n       * @param {String} code The sms code sent by AV.User.Cloud.requestSmsCode\n       * @return {Promise} A promise that will be resolved with the result\n       * of the function.\n       */\n      verifyMobilePhone: function(code) {\n        var request = AVRequest('verifyMobilePhone', null, code, 'POST', null);\n        return request;\n      },\n\n      /**\n       * Requests a logIn sms code to be sent to the specified mobile phone\n       * number associated with the user account. This sms code allows the user to\n       * login by AV.User.logInWithMobilePhoneSmsCode function.\n       *\n       * @param {String} mobilePhoneNumber The mobile phone number  associated with the\n       *           user that want to login by AV.User.logInWithMobilePhoneSmsCode\n       * @param {AuthOptions} [options] AuthOptions plus:\n       * @param {String} [options.validateToken] a validate token returned by {@link AV.Cloud.verifyCaptcha}\n       * @return {Promise}\n       */\n      requestLoginSmsCode: function(mobilePhoneNumber, options = {}) {\n        const data = {\n          mobilePhoneNumber,\n        };\n        if (options.validateToken) {\n          data.validate_token = options.validateToken;\n        }\n        var request = AVRequest(\n          'requestLoginSmsCode',\n          null,\n          null,\n          'POST',\n          data,\n          options\n        );\n        return request;\n      },\n\n      /**\n       * Retrieves the currently logged in AVUser with a valid session,\n       * either from memory or localStorage, if necessary.\n       * @return {Promise.&lt;AV.User>} resolved with the currently logged in AV.User.\n       */\n      currentAsync: function() {\n        if (AV._config.disableCurrentUser) {\n          console.warn(\n            'AV.User.currentAsync() was disabled in multi-user environment, access user from request instead https://leancloud.cn/docs/leanengine-node-sdk-upgrade-1.html'\n          );\n          return Promise.resolve(null);\n        }\n\n        if (AV.User._currentUser) {\n          return Promise.resolve(AV.User._currentUser);\n        }\n\n        if (AV.User._currentUserMatchesDisk) {\n          return Promise.resolve(AV.User._currentUser);\n        }\n\n        return AV.localStorage\n          .getItemAsync(AV._getAVPath(AV.User._CURRENT_USER_KEY))\n          .then(function(userData) {\n            if (!userData) {\n              return null;\n            }\n\n            // Load the user from local storage.\n            AV.User._currentUserMatchesDisk = true;\n\n            AV.User._currentUser = AV.Object._create('_User');\n            AV.User._currentUser._isCurrentUser = true;\n\n            var json = JSON.parse(userData);\n            AV.User._currentUser.id = json._id;\n            delete json._id;\n            AV.User._currentUser._sessionToken = json._sessionToken;\n            delete json._sessionToken;\n            AV.User._currentUser._finishFetch(json);\n            //AV.User._currentUser.set(json);\n\n            AV.User._currentUser._synchronizeAllAuthData();\n            AV.User._currentUser._refreshCache();\n            AV.User._currentUser._opSetQueue = [{}];\n            return AV.User._currentUser;\n          });\n      },\n\n      /**\n       * Retrieves the currently logged in AVUser with a valid session,\n       * either from memory or localStorage, if necessary.\n       * @return {AV.User} The currently logged in AV.User.\n       */\n      current: function() {\n        if (AV._config.disableCurrentUser) {\n          console.warn(\n            'AV.User.current() was disabled in multi-user environment, access user from request instead https://leancloud.cn/docs/leanengine-node-sdk-upgrade-1.html'\n          );\n          return null;\n        }\n\n        if (AV.User._currentUser) {\n          return AV.User._currentUser;\n        }\n\n        if (AV.User._currentUserMatchesDisk) {\n          return AV.User._currentUser;\n        }\n\n        // Load the user from local storage.\n        AV.User._currentUserMatchesDisk = true;\n\n        var userData = AV.localStorage.getItem(\n          AV._getAVPath(AV.User._CURRENT_USER_KEY)\n        );\n        if (!userData) {\n          return null;\n        }\n        AV.User._currentUser = AV.Object._create('_User');\n        AV.User._currentUser._isCurrentUser = true;\n\n        var json = JSON.parse(userData);\n        AV.User._currentUser.id = json._id;\n        delete json._id;\n        AV.User._currentUser._sessionToken = json._sessionToken;\n        delete json._sessionToken;\n        AV.User._currentUser._finishFetch(json);\n        //AV.User._currentUser.set(json);\n\n        AV.User._currentUser._synchronizeAllAuthData();\n        AV.User._currentUser._refreshCache();\n        AV.User._currentUser._opSetQueue = [{}];\n        return AV.User._currentUser;\n      },\n\n      /**\n       * Persists a user as currentUser to localStorage, and into the singleton.\n       * @private\n       */\n      _saveCurrentUser: function(user) {\n        var promise;\n        if (AV.User._currentUser !== user) {\n          promise = AV.User.logOut();\n        } else {\n          promise = Promise.resolve();\n        }\n        return promise.then(function() {\n          user._isCurrentUser = true;\n          AV.User._currentUser = user;\n\n          var json = user._toFullJSON();\n          json._id = user.id;\n          json._sessionToken = user._sessionToken;\n          return AV.localStorage\n            .setItemAsync(\n              AV._getAVPath(AV.User._CURRENT_USER_KEY),\n              JSON.stringify(json)\n            )\n            .then(function() {\n              AV.User._currentUserMatchesDisk = true;\n              return AV._refreshSubscriptionId();\n            });\n        });\n      },\n\n      _registerAuthenticationProvider: function(provider) {\n        AV.User._authProviders[provider.getAuthType()] = provider;\n        // Synchronize the current user with the auth provider.\n        if (!AV._config.disableCurrentUser &amp;&amp; AV.User.current()) {\n          AV.User.current()._synchronizeAuthData(provider.getAuthType());\n        }\n      },\n\n      _logInWith: function(provider, authData, options) {\n        var user = AV.Object._create('_User');\n        return user._linkWith(provider, authData, options);\n      },\n    }\n  );\n};\n</code></pre>\n        </article>\n    </section>\n\n\n\n\n</div>\n\n<br class=\"clear\">\n\n<footer>\n    Documentation generated by <a href=\"https://github.com/jsdoc3/jsdoc\">JSDoc 3.5.5</a> on Wed Jul 18 2018 22:00:13 GMT+0800 (China Standard Time) using the <a href=\"https://github.com/clenemt/docdash\">docdash</a> theme.\n</footer>\n\n<script>prettyPrint();</script>\n<script src=\"/8c674e0a4abe98b065c8b19e62f328f9.js\"></script>\n</body>\n</html>\n"},"hash":"889f60acaac505a90a81eee769de27e9","cacheData":{}}