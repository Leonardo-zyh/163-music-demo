{"id":"..\\node_modules\\leancloud-storage\\docs\\query.js.html","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\package.json","includedInParent":true,"mtime":1537089220121},{"name":"./scripts\\prettify\\prettify.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\prettify\\prettify.js"},{"name":"./scripts\\prettify\\lang-css.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\prettify\\lang-css.js"},{"name":"./styles\\prettify.css","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\styles\\prettify.css"},{"name":"./styles\\jsdoc.css","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\styles\\jsdoc.css"},{"name":"./index.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\index.html"},{"name":"./AV.ACL.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.ACL.html"},{"name":"./AV.Captcha.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Captcha.html"},{"name":"./AV.Conversation.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Conversation.html"},{"name":"./AV.Error.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Error.html"},{"name":"./AV.File.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.File.html"},{"name":"./AV.GeoPoint.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.GeoPoint.html"},{"name":"./AV.InboxQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.InboxQuery.html"},{"name":"./AV.Insight.JobQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Insight.JobQuery.html"},{"name":"./AV.Leaderboard.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Leaderboard.html"},{"name":"./AV.LiveQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.LiveQuery.html"},{"name":"./AV.Object.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Object.html"},{"name":"./AV.Query.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Query.html"},{"name":"./AV.Relation.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Relation.html"},{"name":"./AV.Role.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Role.html"},{"name":"./AV.SearchQuery.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.SearchQuery.html"},{"name":"./AV.SearchSortBuilder.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.SearchSortBuilder.html"},{"name":"./AV.Status.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Status.html"},{"name":"./AV.User.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.User.html"},{"name":"./Statistic.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\Statistic.html"},{"name":"./AV.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.html"},{"name":"./AV.Cloud.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Cloud.html"},{"name":"./AV.Insight.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Insight.html"},{"name":"./AV.Push.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\AV.Push.html"},{"name":"./global.html","dynamic":true,"entry":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\global.html"},{"name":"./scripts\\linenumber.js","dynamic":true,"parent":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\query.js.html","resolved":"C:\\Users\\Administrator\\Desktop\\163-music-demo\\node_modules\\leancloud-storage\\docs\\scripts\\linenumber.js"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>query.js - Documentation</title>\n\n    <script src=\"/4cfc1f2b572ef03db14a51b1e6bd2800.js\"></script>\n    <script src=\"/1b5ae35eb04607b99b9b265d2e97413c.js\"></script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/6e9f51ec602f7fc4f941e7344ae64e5b.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/274e9308aef3834be4d3813aa869153b.css\">\n</head>\n<body>\n\n<input type=\"checkbox\" id=\"nav-trigger\" class=\"nav-trigger\">\n<label for=\"nav-trigger\" class=\"navicon-button x\">\n  <div class=\"navicon\"></div>\n</label>\n\n<label for=\"nav-trigger\" class=\"overlay\"></label>\n\n<nav>\n    <h2><a href=\"/32f1a74c1c5fe360a3d78eb929ec49c7.html\">leancloud-storage</a> <span class=\"package-version\">v3.8.1</span></h2><h3>Classes</h3><ul><li><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html\">ACL</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getPublicReadAccess\">getPublicReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getPublicWriteAccess\">getPublicWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getReadAccess\">getReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getRoleReadAccess\">getRoleReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getRoleWriteAccess\">getRoleWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#getWriteAccess\">getWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setPublicReadAccess\">setPublicReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setPublicWriteAccess\">setPublicWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setReadAccess\">setReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setRoleReadAccess\">setRoleReadAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setRoleWriteAccess\">setRoleWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#setWriteAccess\">setWriteAccess</a></li><li data-type=\"method\"><a href=\"/500afe60c6939fcbcc3d3342849c2e4d.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/cd178600daedfca783ae982925dd20db.html\">Captcha</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#.request\">request</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#bind\">bind</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#refresh\">refresh</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#unbind\">unbind</a></li><li data-type=\"method\"><a href=\"/cd178600daedfca783ae982925dd20db.html#verify\">verify</a></li></ul></li><li><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html\">Conversation</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#addMember\">addMember</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#broadcast\">broadcast</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getCreator\">getCreator</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getLastMessageAt\">getLastMessageAt</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getMembers\">getMembers</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getMutedMembers\">getMutedMembers</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#getName\">getName</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#isSystem\">isSystem</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#isTransient\">isTransient</a></li><li data-type=\"method\"><a href=\"/9ab4770c0af517a6d307beb0533a1c4e.html#send\">send</a></li></ul></li><li><a href=\"/6c6da53e6eb3790c9be4c8a9160ecbc0.html\">Error</a></li><li><a href=\"/07b374d13e164aca86af288d7550c522.html\">File</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#.withURL\">withURL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#get\">get</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#getACL\">getACL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#metaData\">metaData</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#name\">name</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#ownerId\">ownerId</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#save\">save</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#set\">set</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#setACL\">setACL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#setUploadHeader\">setUploadHeader</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#size\">size</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#thumbnailURL\">thumbnailURL</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#toFullJSON\">toFullJSON</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/07b374d13e164aca86af288d7550c522.html#url\">url</a></li></ul></li><li><a href=\"/507f70cb2b141178f91c9a95599846ce.html\">GeoPoint</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#.current\">current</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#kilometersTo\">kilometersTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#milesTo\">milesTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#radiansTo\">radiansTo</a></li><li data-type=\"method\"><a href=\"/507f70cb2b141178f91c9a95599846ce.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/614665e77c9ad14617b43a87818f9b0a.html\">InboxQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#inboxType\">inboxType</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#maxId\">maxId</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#owner\">owner</a></li><li data-type=\"method\"><a href=\"/614665e77c9ad14617b43a87818f9b0a.html#sinceId\">sinceId</a></li></ul></li><li><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html\">JobQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#find\">find</a></li><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/e6443a5665e09eb1907d4172d7d4e3d9.html#skip\">skip</a></li></ul></li><li><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html\">Leaderboard</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.createLeaderboard\">createLeaderboard</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.getLeaderboard\">getLeaderboard</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.getStatistics\">getStatistics</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#.updateStatistics\">updateStatistics</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getArchives\">getArchives</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getResults\">getResults</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#getResultsAroundUser\">getResultsAroundUser</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#reset\">reset</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#updateUpdateStrategy\">updateUpdateStrategy</a></li><li data-type=\"method\"><a href=\"/ce12d9ca18a271e036ee2488ae864fda.html#updateVersionChangeInterval\">updateVersionChangeInterval</a></li></ul></li><li><a href=\"/62182475aa64b9e08c852e0ad358a758.html\">LiveQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/62182475aa64b9e08c852e0ad358a758.html#unsubscribe\">unsubscribe</a></li></ul></li><li><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html\">Object</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.%27new%27\">'new'</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.createWithoutData\">createWithoutData</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.destroyAll\">destroyAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.extend\">extend</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.fetchAll\">fetchAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.register\">register</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#.saveAll\">saveAll</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#add\">add</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#addUnique\">addUnique</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitAnd\">bitAnd</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitOr\">bitOr</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#bitXor\">bitXor</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#change\">change</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#changedAttributes\">changedAttributes</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#clear\">clear</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#clone\">clone</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#dirty\">dirty</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#escape\">escape</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#fetchWhenSave\">fetchWhenSave</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#get\">get</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getACL\">getACL</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getCreatedAt\">getCreatedAt</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getObjectId\">getObjectId</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#getUpdatedAt\">getUpdatedAt</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#has\">has</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#hasChanged\">hasChanged</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#increment\">increment</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#initialize\">initialize</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#isNew\">isNew</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#isValid\">isValid</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#op\">op</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#previous\">previous</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#previousAttributes\">previousAttributes</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#relation\">relation</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#remove\">remove</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#save\">save</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#set\">set</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#setACL\">setACL</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#toFullJSON\">toFullJSON</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#unset\">unset</a></li><li data-type=\"method\"><a href=\"/1694d95c59449d44d778e6f9cddf2a42.html#validate\">validate</a></li></ul></li><li><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html\">Query</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.and\">and</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.doCloudQuery\">doCloudQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#.or\">or</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#addAscending\">addAscending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#addDescending\">addDescending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#containedIn\">containedIn</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#contains\">contains</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#containsAll\">containsAll</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#count\">count</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#destroyAll\">destroyAll</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotExist\">doesNotExist</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotMatchKeyInQuery\">doesNotMatchKeyInQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#doesNotMatchQuery\">doesNotMatchQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#each\">each</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#endsWith\">endsWith</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#equalTo\">equalTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#exists\">exists</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#find\">find</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#first\">first</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#get\">get</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#greaterThan\">greaterThan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#greaterThanOrEqualTo\">greaterThanOrEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#include\">include</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#includeACL\">includeACL</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#lessThan\">lessThan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#lessThanOrEqualTo\">lessThanOrEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matches\">matches</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matchesKeyInQuery\">matchesKeyInQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#matchesQuery\">matchesQuery</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#near\">near</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#notContainedIn\">notContainedIn</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#notEqualTo\">notEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#scan\">scan</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#select\">select</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#sizeEqualTo\">sizeEqualTo</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#skip\">skip</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#startsWith\">startsWith</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#subscribe\">subscribe</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#toJSON\">toJSON</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinGeoBox\">withinGeoBox</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinKilometers\">withinKilometers</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinMiles\">withinMiles</a></li><li data-type=\"method\"><a href=\"/7c70008f6a0d7f45c0da153e2e714944.html#withinRadians\">withinRadians</a></li></ul></li><li><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html\">Relation</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#.reverseQuery\">reverseQuery</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#add\">add</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#query\">query</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#remove\">remove</a></li><li data-type=\"method\"><a href=\"/830b58dbd90b2d5b58dd96de38efcb2b.html#toJSON\">toJSON</a></li></ul></li><li><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html\">Role</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getName\">getName</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getRoles\">getRoles</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#getUsers\">getUsers</a></li><li data-type=\"method\"><a href=\"/6eee974619376ec5d7bd5cff6ebd3ebd.html#setName\">setName</a></li></ul></li><li><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html\">SearchQuery</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#addAscending\">addAscending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#addDescending\">addDescending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#find\">find</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#hasMore\">hasMore</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#highlights\">highlights</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#hits\">hits</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#include\">include</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#limit\">limit</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#queryString\">queryString</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#reset\">reset</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#sid\">sid</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#skip\">skip</a></li><li data-type=\"method\"><a href=\"/a69d9ffc21ab8bae2e199b0bdbdcc34b.html#sortBy\">sortBy</a></li></ul></li><li><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html\">SearchSortBuilder</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#ascending\">ascending</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#build\">build</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#descending\">descending</a></li><li data-type=\"method\"><a href=\"/ca79da55cde90e4b3c09b16b6e423dc2.html#whereNear\">whereNear</a></li></ul></li><li><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html\">Status</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.countUnreadStatuses\">countUnreadStatuses</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.inboxQuery\">inboxQuery</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.resetUnreadCount\">resetUnreadCount</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.sendPrivateStatus\">sendPrivateStatus</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.sendStatusToFollowers\">sendStatusToFollowers</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#.statusQuery\">statusQuery</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#destroy\">destroy</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#get\">get</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#send\">send</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#set\">set</a></li><li data-type=\"method\"><a href=\"/3e0b7dfffc933e56b2fb397688e06583.html#toObject\">toObject</a></li></ul></li><li><a href=\"/dbd38d554704b2eee25bf04c078929b1.html\">User</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.become\">become</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.current\">current</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.currentAsync\">currentAsync</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.followeeQuery\">followeeQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.followerQuery\">followerQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logIn\">logIn</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginAnonymously\">loginAnonymously</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithAuthData\">loginWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithAuthDataAndUnionId\">loginWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logInWithMobilePhone\">logInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logInWithMobilePhoneSmsCode\">logInWithMobilePhoneSmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.loginWithWeapp\">loginWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.logOut\">logOut</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestEmailVerify\">requestEmailVerify</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestLoginSmsCode\">requestLoginSmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestMobilePhoneVerify\">requestMobilePhoneVerify</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestPasswordReset\">requestPasswordReset</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.requestPasswordResetBySmsCode\">requestPasswordResetBySmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.resetPasswordBySmsCode\">resetPasswordBySmsCode</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUp\">signUp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithAuthData\">signUpOrlogInWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithAuthDataAndUnionId\">signUpOrlogInWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.signUpOrlogInWithMobilePhone\">signUpOrlogInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#.verifyMobilePhone\">verifyMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#associateWithAuthData\">associateWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#associateWithAuthDataAndUnionId\">associateWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#authenticated\">authenticated</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#dissociateAuthData\">dissociateAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#fetch\">fetch</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#follow\">follow</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#followeeQuery\">followeeQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#followerQuery\">followerQuery</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getEmail\">getEmail</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getMobilePhoneNumber\">getMobilePhoneNumber</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getRoles\">getRoles</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getSessionToken\">getSessionToken</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#getUsername\">getUsername</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#isAuthenticated\">isAuthenticated</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#isCurrent\">isCurrent</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#linkWithWeapp\">linkWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#logIn\">logIn</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithAuthData\">loginWithAuthData</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithAuthDataAndUnionId\">loginWithAuthDataAndUnionId</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#loginWithWeapp\">loginWithWeapp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#refreshSessionToken\">refreshSessionToken</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#save\">save</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setEmail\">setEmail</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setMobilePhoneNumber\">setMobilePhoneNumber</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setPassword\">setPassword</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#setUsername\">setUsername</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#signUp\">signUp</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#signUpOrlogInWithMobilePhone\">signUpOrlogInWithMobilePhone</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#unfollow\">unfollow</a></li><li data-type=\"method\"><a href=\"/dbd38d554704b2eee25bf04c078929b1.html#updatePassword\">updatePassword</a></li></ul></li><li><a href=\"/caf0b0ed77f512ca46c38d8e4eff127d.html\">Statistic</a></li></ul><h3>Events</h3><ul><li><a href=\"/62182475aa64b9e08c852e0ad358a758.html#Events\">AV.LiveQuery</a><ul class=\"events\"><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:create\">create</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:delete\">delete</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:enter\">enter</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:leave\">leave</a><a href=\"/62182475aa64b9e08c852e0ad358a758.html#event:update\">update</a></ul></li></ul><h3>Namespaces</h3><ul><li><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html\">AV</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.init\">init</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.parseJSON\">parseJSON</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.request\">request</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setProduction\">setProduction</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setRequestTimeout\">setRequestTimeout</a></li><li data-type=\"method\"><a href=\"/9857994ab0446a3a9ae8e78a238868d2.html#.setServerURLs\">setServerURLs</a></li></ul></li><li><a href=\"/84da14a070699c1d802d776a83c94381.html\">Cloud</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.getServerDate\">getServerDate</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.requestCaptcha\">requestCaptcha</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.requestSmsCode\">requestSmsCode</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.rpc\">rpc</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.run\">run</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.useMasterKey\">useMasterKey</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.verifyCaptcha\">verifyCaptcha</a></li><li data-type=\"method\"><a href=\"/84da14a070699c1d802d776a83c94381.html#.verifySmsCode\">verifySmsCode</a></li></ul></li><li><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html\">Insight</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html#.on\">on</a></li><li data-type=\"method\"><a href=\"/3d5ecfdb1e9397b3c81c3b8f1c6edb2d.html#.startJob\">startJob</a></li></ul></li><li><a href=\"/d850dae6459664b88b80f66d22cbb9ec.html\">Push</a><ul class=\"methods\"><li data-type=\"method\"><a href=\"/d850dae6459664b88b80f66d22cbb9ec.html#.send\">send</a></li></ul></li></ul><h3><a href=\"/252a41dc0fbbe18dd04851874ffbac52.html\">Global</a></h3>\n</nav>\n\n<div id=\"main\">\n    \n    <h1 class=\"page-title\">query.js</h1>\n    \n\n    \n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>const _ = require('underscore');\nconst debug = require('debug')('leancloud:query');\nconst Promise = require('./promise');\nconst AVError = require('./error');\nconst { _request, request } = require('./request');\nconst { ensureArray, transformFetchOptions } = require('./utils');\n\nconst requires = (value, message) => {\n  if (value === undefined) {\n    throw new Error(message);\n  }\n};\n\n// AV.Query is a way to create a list of AV.Objects.\nmodule.exports = function(AV) {\n  /**\n   * Creates a new AV.Query for the given AV.Object subclass.\n   * @param {Class|String} objectClass An instance of a subclass of AV.Object, or a AV className string.\n   * @class\n   *\n   * &lt;p>AV.Query defines a query that is used to fetch AV.Objects. The\n   * most common use case is finding all objects that match a query through the\n   * &lt;code>find&lt;/code> method. For example, this sample code fetches all objects\n   * of class &lt;code>MyClass&lt;/code>. It calls a different function depending on\n   * whether the fetch succeeded or not.\n   *\n   * &lt;pre>\n   * var query = new AV.Query(MyClass);\n   * query.find().then(function(results) {\n   *   // results is an array of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });&lt;/pre>&lt;/p>\n   *\n   * &lt;p>An AV.Query can also be used to retrieve a single object whose id is\n   * known, through the get method. For example, this sample code fetches an\n   * object of class &lt;code>MyClass&lt;/code> and id &lt;code>myId&lt;/code>. It calls a\n   * different function depending on whether the fetch succeeded or not.\n   *\n   * &lt;pre>\n   * var query = new AV.Query(MyClass);\n   * query.get(myId).then(function(object) {\n   *   // object is an instance of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });&lt;/pre>&lt;/p>\n   *\n   * &lt;p>An AV.Query can also be used to count the number of objects that match\n   * the query without retrieving all of those objects. For example, this\n   * sample code counts the number of objects of the class &lt;code>MyClass&lt;/code>\n   * &lt;pre>\n   * var query = new AV.Query(MyClass);\n   * query.count().then(function(number) {\n   *   // There are number instances of MyClass.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });&lt;/pre>&lt;/p>\n   */\n  AV.Query = function(objectClass) {\n    if (_.isString(objectClass)) {\n      objectClass = AV.Object._getSubclass(objectClass);\n    }\n\n    this.objectClass = objectClass;\n\n    this.className = objectClass.prototype.className;\n\n    this._where = {};\n    this._include = [];\n    this._select = [];\n    this._limit = -1; // negative limit means, do not send a limit\n    this._skip = 0;\n    this._extraOptions = {};\n  };\n\n  /**\n   * Constructs a AV.Query that is the OR of the passed in queries.  For\n   * example:\n   * &lt;pre>var compoundQuery = AV.Query.or(query1, query2, query3);&lt;/pre>\n   *\n   * will create a compoundQuery that is an or of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to OR.\n   * @return {AV.Query} The query that is the OR of the passed in queries.\n   */\n  AV.Query.or = function() {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function(q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._orQuery(queries);\n    return query;\n  };\n\n  /**\n   * Constructs a AV.Query that is the AND of the passed in queries.  For\n   * example:\n   * &lt;pre>var compoundQuery = AV.Query.and(query1, query2, query3);&lt;/pre>\n   *\n   * will create a compoundQuery that is an 'and' of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to AND.\n   * @return {AV.Query} The query that is the AND of the passed in queries.\n   */\n  AV.Query.and = function() {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function(q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._andQuery(queries);\n    return query;\n  };\n\n  /**\n   * Retrieves a list of AVObjects that satisfy the CQL.\n   * CQL syntax please see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   *\n   * @param {String} cql A CQL string, see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   * @param {Array} pvalues An array contains placeholder values.\n   * @param {AuthOptions} options\n   * @return {Promise} A promise that is resolved with the results when\n   * the query completes.\n   */\n  AV.Query.doCloudQuery = function(cql, pvalues, options) {\n    var params = { cql: cql };\n    if (_.isArray(pvalues)) {\n      params.pvalues = pvalues;\n    } else {\n      options = pvalues;\n    }\n\n    var request = _request('cloudQuery', null, null, 'GET', params, options);\n    return request.then(function(response) {\n      //query to process results.\n      var query = new AV.Query(response.className);\n      var results = _.map(response.results, function(json) {\n        var obj = query._newObject(response);\n        if (obj._finishFetch) {\n          obj._finishFetch(query._processResult(json), true);\n        }\n        return obj;\n      });\n      return {\n        results: results,\n        count: response.count,\n        className: response.className,\n      };\n    });\n  };\n\n  AV.Query._extend = AV._extend;\n\n  _.extend(\n    AV.Query.prototype,\n    /** @lends AV.Query.prototype */ {\n      //hook to iterate result. Added by dennis&lt;xzhuang@avoscloud.com>.\n      _processResult: function(obj) {\n        return obj;\n      },\n\n      /**\n       * Constructs an AV.Object whose id is already known by fetching data from\n       * the server.\n       *\n       * @param {String} objectId The id of the object to be fetched.\n       * @param {AuthOptions} options\n       * @return {Promise.&lt;AV.Object>}\n       */\n      get: function(objectId, options) {\n        if (!objectId) {\n          var errorObject = new AVError(\n            AVError.OBJECT_NOT_FOUND,\n            'Object not found.'\n          );\n          throw errorObject;\n        }\n\n        var obj = this._newObject();\n        obj.id = objectId;\n\n        var queryJSON = this.toJSON();\n        var fetchOptions = {};\n\n        if (queryJSON.keys) fetchOptions.keys = queryJSON.keys;\n        if (queryJSON.include) fetchOptions.include = queryJSON.include;\n        if (queryJSON.includeACL)\n          fetchOptions.includeACL = queryJSON.includeACL;\n\n        return _request(\n          'classes',\n          this.className,\n          objectId,\n          'GET',\n          transformFetchOptions(fetchOptions),\n          options\n        ).then(response => {\n          if (_.isEmpty(response))\n            throw new AVError(AVError.OBJECT_NOT_FOUND, 'Object not found.');\n          obj._finishFetch(obj.parse(response), true);\n          return obj;\n        });\n      },\n\n      /**\n       * Returns a JSON representation of this query.\n       * @return {Object}\n       */\n      toJSON: function() {\n        var params = {\n          where: this._where,\n        };\n\n        if (this._include.length > 0) {\n          params.include = this._include.join(',');\n        }\n        if (this._select.length > 0) {\n          params.keys = this._select.join(',');\n        }\n        if (this._includeACL !== undefined) {\n          params.returnACL = this._includeACL;\n        }\n        if (this._limit >= 0) {\n          params.limit = this._limit;\n        }\n        if (this._skip > 0) {\n          params.skip = this._skip;\n        }\n        if (this._order !== undefined) {\n          params.order = this._order;\n        }\n\n        AV._objectEach(this._extraOptions, function(v, k) {\n          params[k] = v;\n        });\n\n        return params;\n      },\n\n      _newObject: function(response) {\n        var obj;\n        if (response &amp;&amp; response.className) {\n          obj = new AV.Object(response.className);\n        } else {\n          obj = new this.objectClass();\n        }\n        return obj;\n      },\n      _createRequest(\n        params = this.toJSON(),\n        options,\n        path = `/classes/${this.className}`\n      ) {\n        if (encodeURIComponent(JSON.stringify(params)).length > 2000) {\n          const body = {\n            requests: [\n              {\n                method: 'GET',\n                path: `/1.1${path}`,\n                params,\n              },\n            ],\n          };\n          return request({\n            path: '/batch',\n            method: 'POST',\n            data: body,\n            authOptions: options,\n          }).then(response => {\n            const result = response[0];\n            if (result.success) {\n              return result.success;\n            }\n            const error = new Error(\n              result.error.error || 'Unknown batch error'\n            );\n            error.code = result.error.code;\n            throw error;\n          });\n        }\n        return request({\n          method: 'GET',\n          path,\n          query: params,\n          authOptions: options,\n        });\n      },\n\n      _parseResponse(response) {\n        return _.map(response.results, json => {\n          var obj = this._newObject(response);\n          if (obj._finishFetch) {\n            obj._finishFetch(this._processResult(json), true);\n          }\n          return obj;\n        });\n      },\n\n      /**\n       * Retrieves a list of AVObjects that satisfy this query.\n       *\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is resolved with the results when\n       * the query completes.\n       */\n      find(options) {\n        const request = this._createRequest(undefined, options);\n        return request.then(this._parseResponse.bind(this));\n      },\n\n      /**\n       * scan a Query. masterKey required.\n       *\n       * @since 2.1.0\n       * @param {object} [options]\n       * @param {string} [options.orderedBy] specify the key to sort\n       * @param {number} [options.batchSize] specify the batch size for each request\n       * @param {AuthOptions} [authOptions]\n       * @return {AsyncIterator.&lt;AV.Object>}\n       * @example const scan = new AV.Query(TestClass).scan({\n       *   orderedBy: 'objectId',\n       *   batchSize: 10,\n       * }, {\n       *   useMasterKey: true,\n       * });\n       * const getTen = () => Promise.all(new Array(10).fill(0).map(() => scan.next()));\n       * getTen().then(results => {\n       *   // results are fisrt 10 instances of TestClass\n       *   return getTen();\n       * }).then(results => {\n       *   // 11 - 20\n       * });\n       */\n      scan({ orderedBy, batchSize } = {}, authOptions) {\n        const condition = this.toJSON();\n        debug('scan %O', condition);\n        if (condition.order) {\n          console.warn(\n            'The order of the query is ignored for Query#scan. Checkout the orderedBy option of Query#scan.'\n          );\n          delete condition.order;\n        }\n        if (condition.skip) {\n          console.warn(\n            'The skip option of the query is ignored for Query#scan.'\n          );\n          delete condition.skip;\n        }\n        if (condition.limit) {\n          console.warn(\n            'The limit option of the query is ignored for Query#scan.'\n          );\n          delete condition.limit;\n        }\n        if (orderedBy) condition.scan_key = orderedBy;\n        if (batchSize) condition.limit = batchSize;\n        let promise = Promise.resolve([]);\n        let cursor;\n        let done = false;\n        return {\n          next: () => {\n            promise = promise.then(remainResults => {\n              if (done) return [];\n              if (remainResults.length > 1) return remainResults;\n              // no cursor means we have reached the end\n              // except for the first time\n              if (!cursor &amp;&amp; remainResults.length !== 0) {\n                done = true;\n                return remainResults;\n              }\n              // when only 1 item left in queue\n              // start the next request to see if it is the last one\n              return _request(\n                'scan/classes',\n                this.className,\n                null,\n                'GET',\n                cursor ? _.extend({}, condition, { cursor }) : condition,\n                authOptions\n              )\n                .then(response => {\n                  cursor = response.cursor;\n                  return this._parseResponse(response);\n                })\n                .then(results => {\n                  if (!results.length) done = true;\n                  return remainResults.concat(results);\n                });\n            });\n            return promise\n              .then(remainResults => remainResults.shift())\n              .then(result => ({\n                value: result,\n                done,\n              }));\n          },\n        };\n      },\n\n      /**\n       * Delete objects retrieved by this query.\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is fulfilled when the save\n       *     completes.\n       */\n      destroyAll: function(options) {\n        var self = this;\n        return self.find(options).then(function(objects) {\n          return AV.Object.destroyAll(objects, options);\n        });\n      },\n\n      /**\n       * Counts the number of objects that match this query.\n       *\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is resolved with the count when\n       * the query completes.\n       */\n      count: function(options) {\n        var params = this.toJSON();\n        params.limit = 0;\n        params.count = 1;\n        var request = this._createRequest(params, options);\n\n        return request.then(function(response) {\n          return response.count;\n        });\n      },\n\n      /**\n       * Retrieves at most one AV.Object that satisfies this query.\n       *\n       * @param {AuthOptions} options\n       * @return {Promise} A promise that is resolved with the object when\n       * the query completes.\n       */\n      first: function(options) {\n        var self = this;\n\n        var params = this.toJSON();\n        params.limit = 1;\n        var request = this._createRequest(params, options);\n\n        return request.then(function(response) {\n          return _.map(response.results, function(json) {\n            var obj = self._newObject();\n            if (obj._finishFetch) {\n              obj._finishFetch(self._processResult(json), true);\n            }\n            return obj;\n          })[0];\n        });\n      },\n\n      /**\n       * Sets the number of results to skip before returning any results.\n       * This is useful for pagination.\n       * Default is to skip zero results.\n       * @param {Number} n the number of results to skip.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      skip: function(n) {\n        requires(n, 'undefined is not a valid skip value');\n        this._skip = n;\n        return this;\n      },\n\n      /**\n       * Sets the limit of the number of results to return. The default limit is\n       * 100, with a maximum of 1000 results being returned at a time.\n       * @param {Number} n the number of results to limit to.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      limit: function(n) {\n        requires(n, 'undefined is not a valid limit value');\n        this._limit = n;\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be equal to the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that the AV.Object must contain.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      equalTo: function(key, value) {\n        requires(key, 'undefined is not a valid key');\n        requires(value, 'undefined is not a valid value');\n        this._where[key] = AV._encode(value);\n        return this;\n      },\n\n      /**\n       * Helper for condition queries\n       * @private\n       */\n      _addCondition: function(key, condition, value) {\n        requires(key, 'undefined is not a valid condition key');\n        requires(condition, 'undefined is not a valid condition');\n        requires(value, 'undefined is not a valid condition value');\n\n        // Check if we already have a condition\n        if (!this._where[key]) {\n          this._where[key] = {};\n        }\n        this._where[key][condition] = AV._encode(value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular\n       * &lt;strong>array&lt;/strong> key's length to be equal to the provided value.\n       * @param {String} key The array key to check.\n       * @param value The length value.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      sizeEqualTo: function(key, value) {\n        this._addCondition(key, '$size', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be not equal to the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that must not be equalled.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      notEqualTo: function(key, value) {\n        this._addCondition(key, '$ne', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be less than the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that provides an upper bound.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      lessThan: function(key, value) {\n        this._addCondition(key, '$lt', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be greater than the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that provides an lower bound.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      greaterThan: function(key, value) {\n        this._addCondition(key, '$gt', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be less than or equal to the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that provides an upper bound.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      lessThanOrEqualTo: function(key, value) {\n        this._addCondition(key, '$lte', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be greater than or equal to the provided value.\n       * @param {String} key The key to check.\n       * @param value The value that provides an lower bound.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      greaterThanOrEqualTo: function(key, value) {\n        this._addCondition(key, '$gte', value);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * be contained in the provided list of values.\n       * @param {String} key The key to check.\n       * @param {Array} values The values that will match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      containedIn: function(key, values) {\n        this._addCondition(key, '$in', values);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * not be contained in the provided list of values.\n       * @param {String} key The key to check.\n       * @param {Array} values The values that will not match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      notContainedIn: function(key, values) {\n        this._addCondition(key, '$nin', values);\n        return this;\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's value to\n       * contain each one of the provided list of values.\n       * @param {String} key The key to check.  This key's value must be an array.\n       * @param {Array} values The values that will match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      containsAll: function(key, values) {\n        this._addCondition(key, '$all', values);\n        return this;\n      },\n\n      /**\n       * Add a constraint for finding objects that contain the given key.\n       * @param {String} key The key that should exist.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      exists: function(key) {\n        this._addCondition(key, '$exists', true);\n        return this;\n      },\n\n      /**\n       * Add a constraint for finding objects that do not contain a given key.\n       * @param {String} key The key that should not exist\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      doesNotExist: function(key) {\n        this._addCondition(key, '$exists', false);\n        return this;\n      },\n\n      /**\n       * Add a regular expression constraint for finding string values that match\n       * the provided regular expression.\n       * This may be slow for large datasets.\n       * @param {String} key The key that the string to match is stored in.\n       * @param {RegExp} regex The regular expression pattern to match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      matches: function(key, regex, modifiers) {\n        this._addCondition(key, '$regex', regex);\n        if (!modifiers) {\n          modifiers = '';\n        }\n        // Javascript regex options support mig as inline options but store them\n        // as properties of the object. We support mi &amp; should migrate them to\n        // modifiers\n        if (regex.ignoreCase) {\n          modifiers += 'i';\n        }\n        if (regex.multiline) {\n          modifiers += 'm';\n        }\n\n        if (modifiers &amp;&amp; modifiers.length) {\n          this._addCondition(key, '$options', modifiers);\n        }\n        return this;\n      },\n\n      /**\n       * Add a constraint that requires that a key's value matches a AV.Query\n       * constraint.\n       * @param {String} key The key that the contains the object to match the\n       *                     query.\n       * @param {AV.Query} query The query that should match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      matchesQuery: function(key, query) {\n        var queryJSON = query.toJSON();\n        queryJSON.className = query.className;\n        this._addCondition(key, '$inQuery', queryJSON);\n        return this;\n      },\n\n      /**\n       * Add a constraint that requires that a key's value not matches a\n       * AV.Query constraint.\n       * @param {String} key The key that the contains the object to match the\n       *                     query.\n       * @param {AV.Query} query The query that should not match.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      doesNotMatchQuery: function(key, query) {\n        var queryJSON = query.toJSON();\n        queryJSON.className = query.className;\n        this._addCondition(key, '$notInQuery', queryJSON);\n        return this;\n      },\n\n      /**\n       * Add a constraint that requires that a key's value matches a value in\n       * an object returned by a different AV.Query.\n       * @param {String} key The key that contains the value that is being\n       *                     matched.\n       * @param {String} queryKey The key in the objects returned by the query to\n       *                          match against.\n       * @param {AV.Query} query The query to run.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      matchesKeyInQuery: function(key, queryKey, query) {\n        var queryJSON = query.toJSON();\n        queryJSON.className = query.className;\n        this._addCondition(key, '$select', { key: queryKey, query: queryJSON });\n        return this;\n      },\n\n      /**\n       * Add a constraint that requires that a key's value not match a value in\n       * an object returned by a different AV.Query.\n       * @param {String} key The key that contains the value that is being\n       *                     excluded.\n       * @param {String} queryKey The key in the objects returned by the query to\n       *                          match against.\n       * @param {AV.Query} query The query to run.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      doesNotMatchKeyInQuery: function(key, queryKey, query) {\n        var queryJSON = query.toJSON();\n        queryJSON.className = query.className;\n        this._addCondition(key, '$dontSelect', {\n          key: queryKey,\n          query: queryJSON,\n        });\n        return this;\n      },\n\n      /**\n       * Add constraint that at least one of the passed in queries matches.\n       * @param {Array} queries\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       * @private\n       */\n      _orQuery: function(queries) {\n        var queryJSON = _.map(queries, function(q) {\n          return q.toJSON().where;\n        });\n\n        this._where.$or = queryJSON;\n        return this;\n      },\n\n      /**\n       * Add constraint that both of the passed in queries matches.\n       * @param {Array} queries\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       * @private\n       */\n      _andQuery: function(queries) {\n        var queryJSON = _.map(queries, function(q) {\n          return q.toJSON().where;\n        });\n\n        this._where.$and = queryJSON;\n        return this;\n      },\n\n      /**\n       * Converts a string into a regex that matches it.\n       * Surrounding with \\Q .. \\E does this, we just need to escape \\E's in\n       * the text separately.\n       * @private\n       */\n      _quote: function(s) {\n        return '\\\\Q' + s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q') + '\\\\E';\n      },\n\n      /**\n       * Add a constraint for finding string values that contain a provided\n       * string.  This may be slow for large datasets.\n       * @param {String} key The key that the string to match is stored in.\n       * @param {String} substring The substring that the value must contain.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      contains: function(key, value) {\n        this._addCondition(key, '$regex', this._quote(value));\n        return this;\n      },\n\n      /**\n       * Add a constraint for finding string values that start with a provided\n       * string.  This query will use the backend index, so it will be fast even\n       * for large datasets.\n       * @param {String} key The key that the string to match is stored in.\n       * @param {String} prefix The substring that the value must start with.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      startsWith: function(key, value) {\n        this._addCondition(key, '$regex', '^' + this._quote(value));\n        return this;\n      },\n\n      /**\n       * Add a constraint for finding string values that end with a provided\n       * string.  This will be slow for large datasets.\n       * @param {String} key The key that the string to match is stored in.\n       * @param {String} suffix The substring that the value must end with.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      endsWith: function(key, value) {\n        this._addCondition(key, '$regex', this._quote(value) + '$');\n        return this;\n      },\n\n      /**\n       * Sorts the results in ascending order by the given key.\n       *\n       * @param {String} key The key to order by.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      ascending: function(key) {\n        requires(key, 'undefined is not a valid key');\n        this._order = key;\n        return this;\n      },\n\n      /**\n       * Also sorts the results in ascending order by the given key. The previous sort keys have\n       * precedence over this key.\n       *\n       * @param {String} key The key to order by\n       * @return {AV.Query} Returns the query so you can chain this call.\n       */\n      addAscending: function(key) {\n        requires(key, 'undefined is not a valid key');\n        if (this._order) this._order += ',' + key;\n        else this._order = key;\n        return this;\n      },\n\n      /**\n       * Sorts the results in descending order by the given key.\n       *\n       * @param {String} key The key to order by.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      descending: function(key) {\n        requires(key, 'undefined is not a valid key');\n        this._order = '-' + key;\n        return this;\n      },\n\n      /**\n       * Also sorts the results in descending order by the given key. The previous sort keys have\n       * precedence over this key.\n       *\n       * @param {String} key The key to order by\n       * @return {AV.Query} Returns the query so you can chain this call.\n       */\n      addDescending: function(key) {\n        requires(key, 'undefined is not a valid key');\n        if (this._order) this._order += ',-' + key;\n        else this._order = '-' + key;\n        return this;\n      },\n\n      /**\n       * Add a proximity based constraint for finding objects with key point\n       * values near the point given.\n       * @param {String} key The key that the AV.GeoPoint is stored in.\n       * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      near: function(key, point) {\n        if (!(point instanceof AV.GeoPoint)) {\n          // Try to cast it to a GeoPoint, so that near(\"loc\", [20,30]) works.\n          point = new AV.GeoPoint(point);\n        }\n        this._addCondition(key, '$nearSphere', point);\n        return this;\n      },\n\n      /**\n       * Add a proximity based constraint for finding objects with key point\n       * values near the point given and within the maximum distance given.\n       * @param {String} key The key that the AV.GeoPoint is stored in.\n       * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n       * @param maxDistance Maximum distance (in radians) of results to return.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      withinRadians: function(key, point, distance) {\n        this.near(key, point);\n        this._addCondition(key, '$maxDistance', distance);\n        return this;\n      },\n\n      /**\n       * Add a proximity based constraint for finding objects with key point\n       * values near the point given and within the maximum distance given.\n       * Radius of earth used is 3958.8 miles.\n       * @param {String} key The key that the AV.GeoPoint is stored in.\n       * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n       * @param {Number} maxDistance Maximum distance (in miles) of results to\n       *     return.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      withinMiles: function(key, point, distance) {\n        return this.withinRadians(key, point, distance / 3958.8);\n      },\n\n      /**\n       * Add a proximity based constraint for finding objects with key point\n       * values near the point given and within the maximum distance given.\n       * Radius of earth used is 6371.0 kilometers.\n       * @param {String} key The key that the AV.GeoPoint is stored in.\n       * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n       * @param {Number} maxDistance Maximum distance (in kilometers) of results\n       *     to return.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      withinKilometers: function(key, point, distance) {\n        return this.withinRadians(key, point, distance / 6371.0);\n      },\n\n      /**\n       * Add a constraint to the query that requires a particular key's\n       * coordinates be contained within a given rectangular geographic bounding\n       * box.\n       * @param {String} key The key to be constrained.\n       * @param {AV.GeoPoint} southwest\n       *     The lower-left inclusive corner of the box.\n       * @param {AV.GeoPoint} northeast\n       *     The upper-right inclusive corner of the box.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      withinGeoBox: function(key, southwest, northeast) {\n        if (!(southwest instanceof AV.GeoPoint)) {\n          southwest = new AV.GeoPoint(southwest);\n        }\n        if (!(northeast instanceof AV.GeoPoint)) {\n          northeast = new AV.GeoPoint(northeast);\n        }\n        this._addCondition(key, '$within', { $box: [southwest, northeast] });\n        return this;\n      },\n\n      /**\n       * Include nested AV.Objects for the provided key.  You can use dot\n       * notation to specify which fields in the included object are also fetch.\n       * @param {String[]} keys The name of the key to include.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      include: function(keys) {\n        requires(keys, 'undefined is not a valid key');\n        _(arguments).forEach(keys => {\n          this._include = this._include.concat(ensureArray(keys));\n        });\n        return this;\n      },\n\n      /**\n       * Include the ACL.\n       * @param {Boolean} [value=true] Whether to include the ACL\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      includeACL: function(value = true) {\n        this._includeACL = value;\n        return this;\n      },\n\n      /**\n       * Restrict the fields of the returned AV.Objects to include only the\n       * provided keys.  If this is called multiple times, then all of the keys\n       * specified in each of the calls will be included.\n       * @param {String[]} keys The names of the keys to include.\n       * @return {AV.Query} Returns the query, so you can chain this call.\n       */\n      select: function(keys) {\n        requires(keys, 'undefined is not a valid key');\n        _(arguments).forEach(keys => {\n          this._select = this._select.concat(ensureArray(keys));\n        });\n        return this;\n      },\n\n      /**\n       * Iterates over each result of a query, calling a callback for each one. If\n       * the callback returns a promise, the iteration will not continue until\n       * that promise has been fulfilled. If the callback returns a rejected\n       * promise, then iteration will stop with that error. The items are\n       * processed in an unspecified order. The query may not have any sort order,\n       * and may not use limit or skip.\n       * @param callback {Function} Callback that will be called with each result\n       *     of the query.\n       * @return {Promise} A promise that will be fulfilled once the\n       *     iteration has completed.\n       */\n      each: function(callback, options = {}) {\n        if (this._order || this._skip || this._limit >= 0) {\n          var error = new Error(\n            'Cannot iterate on a query with sort, skip, or limit.'\n          );\n          return Promise.reject(error);\n        }\n\n        var query = new AV.Query(this.objectClass);\n        // We can override the batch size from the options.\n        // This is undocumented, but useful for testing.\n        query._limit = options.batchSize || 100;\n        query._where = _.clone(this._where);\n        query._include = _.clone(this._include);\n\n        query.ascending('objectId');\n\n        var finished = false;\n        return Promise._continueWhile(\n          function() {\n            return !finished;\n          },\n          function() {\n            return query.find(options).then(function(results) {\n              var callbacksDone = Promise.resolve();\n              _.each(results, function(result) {\n                callbacksDone = callbacksDone.then(function() {\n                  return callback(result);\n                });\n              });\n\n              return callbacksDone.then(function() {\n                if (results.length >= query._limit) {\n                  query.greaterThan('objectId', results[results.length - 1].id);\n                } else {\n                  finished = true;\n                }\n              });\n            });\n          }\n        );\n      },\n\n      /**\n       * Subscribe the changes of this query.\n       *\n       * LiveQuery is not included in the default bundle: {@link https://url.leanapp.cn/enable-live-query}.\n       *\n       * @since 3.0.0\n       * @return {AV.LiveQuery} An eventemitter which can be used to get LiveQuery updates;\n       */\n      subscribe(options) {\n        return AV.LiveQuery.init(this, options);\n      },\n    }\n  );\n\n  AV.FriendShipQuery = AV.Query._extend({\n    _objectClass: AV.User,\n    _newObject: function() {\n      return new AV.User();\n    },\n    _processResult: function(json) {\n      if (json &amp;&amp; json[this._friendshipTag]) {\n        var user = json[this._friendshipTag];\n        if (user.__type === 'Pointer' &amp;&amp; user.className === '_User') {\n          delete user.__type;\n          delete user.className;\n        }\n        return user;\n      } else {\n        return null;\n      }\n    },\n  });\n};\n</code></pre>\n        </article>\n    </section>\n\n\n\n\n</div>\n\n<br class=\"clear\">\n\n<footer>\n    Documentation generated by <a href=\"https://github.com/jsdoc3/jsdoc\">JSDoc 3.5.5</a> on Wed Jul 18 2018 22:00:13 GMT+0800 (China Standard Time) using the <a href=\"https://github.com/clenemt/docdash\">docdash</a> theme.\n</footer>\n\n<script>prettyPrint();</script>\n<script src=\"/8c674e0a4abe98b065c8b19e62f328f9.js\"></script>\n</body>\n</html>\n"},"hash":"aac6eea4c07bfdb8b76ded0f5f3253d7","cacheData":{}}